[
  "error AccessControlBadConfirmation()",
  "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function renounceRole(bytes32 role, address callerConfirmation)",
  "function revokeRole(bytes32 role, address account)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error AccessControlBadConfirmation()",
  "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function renounceRole(bytes32 role, address callerConfirmation)",
  "function revokeRole(bytes32 role, address account)",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function transferOwnership(address newOwner)",
  "error AccessControlBadConfirmation()",
  "error AccessControlEnforcedDefaultAdminDelay(uint48 schedule)",
  "error AccessControlEnforcedDefaultAdminRules()",
  "error AccessControlInvalidDefaultAdmin(address defaultAdmin)",
  "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "event DefaultAdminDelayChangeCanceled()",
  "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
  "event DefaultAdminTransferCanceled()",
  "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
  "function acceptDefaultAdminTransfer()",
  "function beginDefaultAdminTransfer(address newAdmin)",
  "function cancelDefaultAdminTransfer()",
  "function changeDefaultAdminDelay(uint48 newDelay)",
  "function defaultAdmin() view returns (address)",
  "function defaultAdminDelay() view returns (uint48)",
  "function defaultAdminDelayIncreaseWait() view returns (uint48)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function owner() view returns (address)",
  "function pendingDefaultAdmin() view returns (address newAdmin, uint48 schedule)",
  "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 schedule)",
  "function renounceRole(bytes32 role, address account)",
  "function revokeRole(bytes32 role, address account)",
  "function rollbackDefaultAdminDelay()",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error AccessControlBadConfirmation()",
  "error AccessControlEnforcedDefaultAdminDelay(uint48 schedule)",
  "error AccessControlEnforcedDefaultAdminRules()",
  "error AccessControlInvalidDefaultAdmin(address defaultAdmin)",
  "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
  "event DefaultAdminDelayChangeCanceled()",
  "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
  "event DefaultAdminTransferCanceled()",
  "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "function acceptDefaultAdminTransfer()",
  "function beginDefaultAdminTransfer(address newAdmin)",
  "function cancelDefaultAdminTransfer()",
  "function changeDefaultAdminDelay(uint48 newDelay)",
  "function defaultAdmin() view returns (address)",
  "function defaultAdminDelay() view returns (uint48)",
  "function defaultAdminDelayIncreaseWait() view returns (uint48)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function pendingDefaultAdmin() view returns (address newAdmin, uint48 acceptSchedule)",
  "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 effectSchedule)",
  "function renounceRole(bytes32 role, address callerConfirmation)",
  "function revokeRole(bytes32 role, address account)",
  "function rollbackDefaultAdminDelay()",
  "error GovernorAlreadyCastVote(address voter)",
  "error GovernorAlreadyQueuedProposal(uint256 proposalId)",
  "error GovernorDisabledDeposit()",
  "error GovernorInsufficientProposerVotes(address proposer, uint256 votes, uint256 threshold)",
  "error GovernorInvalidProposalLength(uint256 targets, uint256 calldatas, uint256 values)",
  "error GovernorInvalidSignature(address voter)",
  "error GovernorInvalidVoteParams()",
  "error GovernorInvalidVoteType()",
  "error GovernorInvalidVotingPeriod(uint256 votingPeriod)",
  "error GovernorNonexistentProposal(uint256 proposalId)",
  "error GovernorNotQueuedProposal(uint256 proposalId)",
  "error GovernorOnlyExecutor(address account)",
  "error GovernorQueueNotImplemented()",
  "error GovernorRestrictedProposer(address proposer)",
  "error GovernorUnableToCancel(uint256 proposalId, address account)",
  "error GovernorUnexpectedProposalState(uint256 proposalId, uint8 current, bytes32 expectedStates)",
  "event ProposalCanceled(uint256 proposalId)",
  "event ProposalCreated(uint256 proposalId, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 voteStart, uint256 voteEnd, string description)",
  "event ProposalExecuted(uint256 proposalId)",
  "event ProposalQueued(uint256 proposalId, uint256 etaSeconds)",
  "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason)",
  "event VoteCastWithParams(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason, bytes params)",
  "function CLOCK_MODE() view returns (string)",
  "function COUNTING_MODE() view returns (string)",
  "function cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256 proposalId)",
  "function castVote(uint256 proposalId, uint8 support) returns (uint256 balance)",
  "function castVoteBySig(uint256 proposalId, uint8 support, address voter, bytes signature) returns (uint256 balance)",
  "function castVoteWithReason(uint256 proposalId, uint8 support, string reason) returns (uint256 balance)",
  "function castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string reason, bytes params) returns (uint256 balance)",
  "function castVoteWithReasonAndParamsBySig(uint256 proposalId, uint8 support, address voter, string reason, bytes params, bytes signature) returns (uint256 balance)",
  "function clock() view returns (uint48)",
  "function execute(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) payable returns (uint256 proposalId)",
  "function getProposalId(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) view returns (uint256)",
  "function getVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotesWithParams(address account, uint256 timepoint, bytes params) view returns (uint256)",
  "function hasVoted(uint256 proposalId, address account) view returns (bool)",
  "function hashProposal(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) pure returns (uint256)",
  "function name() view returns (string)",
  "function proposalDeadline(uint256 proposalId) view returns (uint256)",
  "function proposalEta(uint256 proposalId) view returns (uint256)",
  "function proposalNeedsQueuing(uint256 proposalId) view returns (bool)",
  "function proposalProposer(uint256 proposalId) view returns (address)",
  "function proposalSnapshot(uint256 proposalId) view returns (uint256)",
  "function proposalThreshold() view returns (uint256)",
  "function propose(address[] targets, uint256[] values, bytes[] calldatas, string description) returns (uint256 proposalId)",
  "function queue(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256 proposalId)",
  "function quorum(uint256 timepoint) view returns (uint256)",
  "function state(uint256 proposalId) view returns (uint8)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function version() view returns (string)",
  "function votingDelay() view returns (uint256)",
  "function votingPeriod() view returns (uint256)",
  "error VotesExpiredSignature(uint256 expiry)",
  "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
  "event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes)",
  "function delegate(address delegatee)",
  "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
  "function delegates(address account) view returns (address)",
  "function getPastTotalSupply(uint256 timepoint) view returns (uint256)",
  "function getPastVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotes(address account) view returns (uint256)",
  "error CheckpointUnorderedInsertion()",
  "error ECDSAInvalidSignature()",
  "error ECDSAInvalidSignatureLength(uint256 length)",
  "error ECDSAInvalidSignatureS(bytes32 s)",
  "error ERC5805FutureLookup(uint256 timepoint, uint48 clock)",
  "error ERC6372InconsistentClock()",
  "error InvalidAccountNonce(address account, uint256 currentNonce)",
  "error InvalidShortString()",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "error StringTooLong(string str)",
  "error VotesExpiredSignature(uint256 expiry)",
  "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
  "event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes)",
  "event EIP712DomainChanged()",
  "function CLOCK_MODE() view returns (string)",
  "function clock() view returns (uint48)",
  "function delegate(address delegatee)",
  "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
  "function delegates(address account) view returns (address)",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function getPastTotalSupply(uint256 timepoint) view returns (uint256)",
  "function getPastVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotes(address account) view returns (uint256)",
  "function nonces(address owner) view returns (uint256)",
  "function isValidSignature(bytes32 hash, bytes signature) view returns (bytes4 magicValue)",
  "event EIP712DomainChanged()",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function owner() view returns (address)",
  "error VotesExpiredSignature(uint256 expiry)",
  "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
  "event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes)",
  "function CLOCK_MODE() view returns (string)",
  "function clock() view returns (uint48)",
  "function delegate(address delegatee)",
  "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
  "function delegates(address account) view returns (address)",
  "function getPastTotalSupply(uint256 timepoint) view returns (uint256)",
  "function getPastVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotes(address account) view returns (uint256)",
  "function CLOCK_MODE() view returns (string)",
  "function clock() view returns (uint48)",
  "error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId)",
  "error ERC1155InvalidApprover(address approver)",
  "error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength)",
  "error ERC1155InvalidOperator(address operator)",
  "error ERC1155InvalidReceiver(address receiver)",
  "error ERC1155InvalidSender(address sender)",
  "error ERC1155MissingApprovalForAll(address operator, address owner)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner)",
  "error ERC721InsufficientApproval(address operator, uint256 tokenId)",
  "error ERC721InvalidApprover(address approver)",
  "error ERC721InvalidOperator(address operator)",
  "error ERC721InvalidOwner(address owner)",
  "error ERC721InvalidReceiver(address receiver)",
  "error ERC721InvalidSender(address sender)",
  "error ERC721NonexistentToken(uint256 tokenId)",
  "error CloneArgumentsTooLong()",
  "error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId)",
  "error ERC1155InvalidApprover(address approver)",
  "error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength)",
  "error ERC1155InvalidOperator(address operator)",
  "error ERC1155InvalidReceiver(address receiver)",
  "error ERC1155InvalidSender(address sender)",
  "error ERC1155MissingApprovalForAll(address operator, address owner)",
  "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
  "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
  "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
  "event URI(string value, uint256 indexed id)",
  "function balanceOf(address account, uint256 id) view returns (uint256)",
  "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
  "function isApprovedForAll(address account, address operator) view returns (bool)",
  "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data)",
  "function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function uri(uint256) view returns (string)",
  "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
  "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
  "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
  "event URI(string value, uint256 indexed id)",
  "function balanceOf(address account, uint256 id) view returns (uint256)",
  "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
  "function isApprovedForAll(address account, address operator) view returns (bool)",
  "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data)",
  "function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function onERC1155BatchReceived(address operator, address from, uint256[] ids, uint256[] values, bytes data) returns (bytes4)",
  "function onERC1155Received(address operator, address from, uint256 id, uint256 value, bytes data) returns (bytes4)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId)",
  "error ERC1155InvalidApprover(address approver)",
  "error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength)",
  "error ERC1155InvalidOperator(address operator)",
  "error ERC1155InvalidReceiver(address receiver)",
  "error ERC1155InvalidSender(address sender)",
  "error ERC1155MissingApprovalForAll(address operator, address owner)",
  "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
  "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
  "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
  "event URI(string value, uint256 indexed id)",
  "function balanceOf(address account, uint256 id) view returns (uint256)",
  "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
  "function burn(address account, uint256 id, uint256 value)",
  "function burnBatch(address account, uint256[] ids, uint256[] values)",
  "function isApprovedForAll(address account, address operator) view returns (bool)",
  "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data)",
  "function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function uri(uint256) view returns (string)",
  "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
  "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
  "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
  "event URI(string value, uint256 indexed id)",
  "function balanceOf(address account, uint256 id) view returns (uint256)",
  "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
  "function isApprovedForAll(address account, address operator) view returns (bool)",
  "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data)",
  "function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function uri(uint256 id) view returns (string)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function decimals() view returns (uint8)",
  "function name() view returns (string)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function burn(uint256 value)",
  "function burnFrom(address account, uint256 value)",
  "function decimals() view returns (uint8)",
  "function name() view returns (string)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "error ERC20ExceededCap(uint256 increasedSupply, uint256 cap)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidCap(uint256 cap)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function cap() view returns (uint256)",
  "function decimals() view returns (uint8)",
  "function name() view returns (string)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "error CheckpointUnorderedInsertion()",
  "error ECDSAInvalidSignature()",
  "error ECDSAInvalidSignatureLength(uint256 length)",
  "error ECDSAInvalidSignatureS(bytes32 s)",
  "error ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "error ERC5805FutureLookup(uint256 timepoint, uint48 clock)",
  "error ERC6372InconsistentClock()",
  "error InvalidAccountNonce(address account, uint256 currentNonce)",
  "error InvalidShortString()",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "error StringTooLong(string str)",
  "error VotesExpiredSignature(uint256 expiry)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
  "event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes)",
  "event EIP712DomainChanged()",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function CLOCK_MODE() view returns (string)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function checkpoints(address account, uint32 pos) view returns (tuple(uint48 _key, uint208 _value))",
  "function clock() view returns (uint48)",
  "function decimals() view returns (uint8)",
  "function delegate(address delegatee)",
  "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
  "function delegates(address account) view returns (address)",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function getPastTotalSupply(uint256 timepoint) view returns (uint256)",
  "function getPastVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotes(address account) view returns (uint256)",
  "function name() view returns (string)",
  "function nonces(address owner) view returns (uint256)",
  "function numCheckpoints(address account) view returns (uint32)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function decimals() view returns (uint8)",
  "function name() view returns (string)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner)",
  "error ERC721InsufficientApproval(address operator, uint256 tokenId)",
  "error ERC721InvalidApprover(address approver)",
  "error ERC721InvalidOperator(address operator)",
  "error ERC721InvalidOwner(address owner)",
  "error ERC721InvalidReceiver(address receiver)",
  "error ERC721InvalidSender(address sender)",
  "error ERC721NonexistentToken(uint256 tokenId)",
  "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
  "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
  "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
  "function approve(address to, uint256 tokenId)",
  "function balanceOf(address owner) view returns (uint256)",
  "function getApproved(uint256 tokenId) view returns (address)",
  "function isApprovedForAll(address owner, address operator) view returns (bool)",
  "function name() view returns (string)",
  "function ownerOf(uint256 tokenId) view returns (address)",
  "function safeTransferFrom(address from, address to, uint256 tokenId)",
  "function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function symbol() view returns (string)",
  "function tokenURI(uint256 tokenId) view returns (string)",
  "function transferFrom(address from, address to, uint256 tokenId)",
  "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
  "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
  "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
  "function approve(address to, uint256 tokenId)",
  "function balanceOf(address owner) view returns (uint256 balance)",
  "function getApproved(uint256 tokenId) view returns (address operator)",
  "function isApprovedForAll(address owner, address operator) view returns (bool)",
  "function ownerOf(uint256 tokenId) view returns (address owner)",
  "function safeTransferFrom(address from, address to, uint256 tokenId)",
  "function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function transferFrom(address from, address to, uint256 tokenId)",
  "function onERC721Received(address operator, address from, uint256 tokenId, bytes data) returns (bytes4)",
  "error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner)",
  "error ERC721InsufficientApproval(address operator, uint256 tokenId)",
  "error ERC721InvalidApprover(address approver)",
  "error ERC721InvalidOperator(address operator)",
  "error ERC721InvalidOwner(address owner)",
  "error ERC721InvalidReceiver(address receiver)",
  "error ERC721InvalidSender(address sender)",
  "error ERC721NonexistentToken(uint256 tokenId)",
  "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
  "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
  "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
  "function approve(address to, uint256 tokenId)",
  "function balanceOf(address owner) view returns (uint256)",
  "function burn(uint256 tokenId)",
  "function getApproved(uint256 tokenId) view returns (address)",
  "function isApprovedForAll(address owner, address operator) view returns (bool)",
  "function name() view returns (string)",
  "function ownerOf(uint256 tokenId) view returns (address)",
  "function safeTransferFrom(address from, address to, uint256 tokenId)",
  "function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function symbol() view returns (string)",
  "function tokenURI(uint256 tokenId) view returns (string)",
  "function transferFrom(address from, address to, uint256 tokenId)",
  "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
  "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
  "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
  "function approve(address to, uint256 tokenId)",
  "function balanceOf(address owner) view returns (uint256 balance)",
  "function getApproved(uint256 tokenId) view returns (address operator)",
  "function isApprovedForAll(address owner, address operator) view returns (bool)",
  "function name() view returns (string)",
  "function ownerOf(uint256 tokenId) view returns (address owner)",
  "function safeTransferFrom(address from, address to, uint256 tokenId)",
  "function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function symbol() view returns (string)",
  "function tokenURI(uint256 tokenId) view returns (string)",
  "function transferFrom(address from, address to, uint256 tokenId)",
  "error AddressEmptyCode(address target)",
  "error Create2EmptyBytecode()",
  "error FailedCall()",
  "error FailedDeployment()",
  "error InsufficientBalance(uint256 balance, uint256 needed)",
  "error MissingPrecompile(address)",
  "error InvalidAccountNonce(address account, uint256 currentNonce)",
  "function nonces(address owner) view returns (uint256)",
  "error ReentrancyGuardReentrantCall()",
  "error InvalidShortString()",
  "error StringTooLong(string str)",
  "error StringsInsufficientHexLength(uint256 value, uint256 length)",
  "error StringsInvalidAddressFormat()",
  "error StringsInvalidChar()",
  "error ECDSAInvalidSignature()",
  "error ECDSAInvalidSignatureLength(uint256 length)",
  "error ECDSAInvalidSignatureS(bytes32 s)",
  "error InvalidShortString()",
  "error StringTooLong(string str)",
  "event EIP712DomainChanged()",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error SafeCastOverflowedIntDowncast(uint8 bits, int256 value)",
  "error SafeCastOverflowedIntToUint(int256 value)",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "error SafeCastOverflowedUintToInt(uint256 value)",
  "error CheckpointUnorderedInsertion()",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "event Initialized(uint64 version)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function transferOwnership(address newOwner)",
  "error FailedCall()",
  "error GovernorAlreadyCastVote(address voter)",
  "error GovernorAlreadyQueuedProposal(uint256 proposalId)",
  "error GovernorDisabledDeposit()",
  "error GovernorInsufficientProposerVotes(address proposer, uint256 votes, uint256 threshold)",
  "error GovernorInvalidProposalLength(uint256 targets, uint256 calldatas, uint256 values)",
  "error GovernorInvalidSignature(address voter)",
  "error GovernorInvalidVoteParams()",
  "error GovernorInvalidVoteType()",
  "error GovernorInvalidVotingPeriod(uint256 votingPeriod)",
  "error GovernorNonexistentProposal(uint256 proposalId)",
  "error GovernorNotQueuedProposal(uint256 proposalId)",
  "error GovernorOnlyExecutor(address account)",
  "error GovernorQueueNotImplemented()",
  "error GovernorRestrictedProposer(address proposer)",
  "error GovernorUnableToCancel(uint256 proposalId, address account)",
  "error GovernorUnexpectedProposalState(uint256 proposalId, uint8 current, bytes32 expectedStates)",
  "error InvalidAccountNonce(address account, uint256 currentNonce)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "event EIP712DomainChanged()",
  "event Initialized(uint64 version)",
  "event ProposalCanceled(uint256 proposalId)",
  "event ProposalCreated(uint256 proposalId, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 voteStart, uint256 voteEnd, string description)",
  "event ProposalExecuted(uint256 proposalId)",
  "event ProposalQueued(uint256 proposalId, uint256 etaSeconds)",
  "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason)",
  "event VoteCastWithParams(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason, bytes params)",
  "function BALLOT_TYPEHASH() view returns (bytes32)",
  "function CLOCK_MODE() view returns (string)",
  "function COUNTING_MODE() view returns (string)",
  "function EXTENDED_BALLOT_TYPEHASH() view returns (bytes32)",
  "function cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
  "function castVote(uint256 proposalId, uint8 support) returns (uint256)",
  "function castVoteBySig(uint256 proposalId, uint8 support, address voter, bytes signature) returns (uint256)",
  "function castVoteWithReason(uint256 proposalId, uint8 support, string reason) returns (uint256)",
  "function castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string reason, bytes params) returns (uint256)",
  "function castVoteWithReasonAndParamsBySig(uint256 proposalId, uint8 support, address voter, string reason, bytes params, bytes signature) returns (uint256)",
  "function clock() view returns (uint48)",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function execute(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) payable returns (uint256)",
  "function getProposalId(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) view returns (uint256)",
  "function getVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotesWithParams(address account, uint256 timepoint, bytes params) view returns (uint256)",
  "function hasVoted(uint256 proposalId, address account) view returns (bool)",
  "function hashProposal(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) pure returns (uint256)",
  "function name() view returns (string)",
  "function nonces(address owner) view returns (uint256)",
  "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
  "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
  "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
  "function proposalDeadline(uint256 proposalId) view returns (uint256)",
  "function proposalEta(uint256 proposalId) view returns (uint256)",
  "function proposalNeedsQueuing(uint256) view returns (bool)",
  "function proposalProposer(uint256 proposalId) view returns (address)",
  "function proposalSnapshot(uint256 proposalId) view returns (uint256)",
  "function proposalThreshold() view returns (uint256)",
  "function propose(address[] targets, uint256[] values, bytes[] calldatas, string description) returns (uint256)",
  "function queue(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
  "function quorum(uint256 timepoint) view returns (uint256)",
  "function relay(address target, uint256 value, bytes data) payable",
  "function state(uint256 proposalId) view returns (uint8)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function version() view returns (string)",
  "function votingDelay() view returns (uint256)",
  "function votingPeriod() view returns (uint256)",
  "error FailedCall()",
  "error GovernorAlreadyCastVote(address voter)",
  "error GovernorAlreadyQueuedProposal(uint256 proposalId)",
  "error GovernorDisabledDeposit()",
  "error GovernorInsufficientProposerVotes(address proposer, uint256 votes, uint256 threshold)",
  "error GovernorInvalidProposalLength(uint256 targets, uint256 calldatas, uint256 values)",
  "error GovernorInvalidSignature(address voter)",
  "error GovernorInvalidVoteParams()",
  "error GovernorInvalidVoteType()",
  "error GovernorInvalidVotingPeriod(uint256 votingPeriod)",
  "error GovernorNonexistentProposal(uint256 proposalId)",
  "error GovernorNotQueuedProposal(uint256 proposalId)",
  "error GovernorOnlyExecutor(address account)",
  "error GovernorQueueNotImplemented()",
  "error GovernorRestrictedProposer(address proposer)",
  "error GovernorUnableToCancel(uint256 proposalId, address account)",
  "error GovernorUnexpectedProposalState(uint256 proposalId, uint8 current, bytes32 expectedStates)",
  "error InvalidAccountNonce(address account, uint256 currentNonce)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "event EIP712DomainChanged()",
  "event Initialized(uint64 version)",
  "event ProposalCanceled(uint256 proposalId)",
  "event ProposalCreated(uint256 proposalId, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 voteStart, uint256 voteEnd, string description)",
  "event ProposalExecuted(uint256 proposalId)",
  "event ProposalQueued(uint256 proposalId, uint256 etaSeconds)",
  "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason)",
  "event VoteCastWithParams(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason, bytes params)",
  "function BALLOT_TYPEHASH() view returns (bytes32)",
  "function CLOCK_MODE() view returns (string)",
  "function COUNTING_MODE() pure returns (string)",
  "function EXTENDED_BALLOT_TYPEHASH() view returns (bytes32)",
  "function cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
  "function castVote(uint256 proposalId, uint8 support) returns (uint256)",
  "function castVoteBySig(uint256 proposalId, uint8 support, address voter, bytes signature) returns (uint256)",
  "function castVoteWithReason(uint256 proposalId, uint8 support, string reason) returns (uint256)",
  "function castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string reason, bytes params) returns (uint256)",
  "function castVoteWithReasonAndParamsBySig(uint256 proposalId, uint8 support, address voter, string reason, bytes params, bytes signature) returns (uint256)",
  "function clock() view returns (uint48)",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function execute(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) payable returns (uint256)",
  "function getProposalId(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) view returns (uint256)",
  "function getVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotesWithParams(address account, uint256 timepoint, bytes params) view returns (uint256)",
  "function hasVoted(uint256 proposalId, address account) view returns (bool)",
  "function hashProposal(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) pure returns (uint256)",
  "function name() view returns (string)",
  "function nonces(address owner) view returns (uint256)",
  "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
  "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
  "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
  "function proposalDeadline(uint256 proposalId) view returns (uint256)",
  "function proposalEta(uint256 proposalId) view returns (uint256)",
  "function proposalNeedsQueuing(uint256) view returns (bool)",
  "function proposalProposer(uint256 proposalId) view returns (address)",
  "function proposalSnapshot(uint256 proposalId) view returns (uint256)",
  "function proposalThreshold() view returns (uint256)",
  "function proposalVotes(uint256 proposalId) view returns (uint256 againstVotes, uint256 forVotes, uint256 abstainVotes)",
  "function propose(address[] targets, uint256[] values, bytes[] calldatas, string description) returns (uint256)",
  "function queue(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
  "function quorum(uint256 timepoint) view returns (uint256)",
  "function relay(address target, uint256 value, bytes data) payable",
  "function state(uint256 proposalId) view returns (uint8)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function version() view returns (string)",
  "function votingDelay() view returns (uint256)",
  "function votingPeriod() view returns (uint256)",
  "error FailedCall()",
  "error GovernorAlreadyCastVote(address voter)",
  "error GovernorAlreadyQueuedProposal(uint256 proposalId)",
  "error GovernorDisabledDeposit()",
  "error GovernorInsufficientProposerVotes(address proposer, uint256 votes, uint256 threshold)",
  "error GovernorInvalidProposalLength(uint256 targets, uint256 calldatas, uint256 values)",
  "error GovernorInvalidSignature(address voter)",
  "error GovernorInvalidVoteParams()",
  "error GovernorInvalidVoteType()",
  "error GovernorInvalidVotingPeriod(uint256 votingPeriod)",
  "error GovernorNonexistentProposal(uint256 proposalId)",
  "error GovernorNotQueuedProposal(uint256 proposalId)",
  "error GovernorOnlyExecutor(address account)",
  "error GovernorQueueNotImplemented()",
  "error GovernorRestrictedProposer(address proposer)",
  "error GovernorUnableToCancel(uint256 proposalId, address account)",
  "error GovernorUnexpectedProposalState(uint256 proposalId, uint8 current, bytes32 expectedStates)",
  "error InvalidAccountNonce(address account, uint256 currentNonce)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "event EIP712DomainChanged()",
  "event Initialized(uint64 version)",
  "event ProposalCanceled(uint256 proposalId)",
  "event ProposalCreated(uint256 proposalId, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 voteStart, uint256 voteEnd, string description)",
  "event ProposalExecuted(uint256 proposalId)",
  "event ProposalQueued(uint256 proposalId, uint256 etaSeconds)",
  "event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold)",
  "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason)",
  "event VoteCastWithParams(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason, bytes params)",
  "event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay)",
  "event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod)",
  "function BALLOT_TYPEHASH() view returns (bytes32)",
  "function CLOCK_MODE() view returns (string)",
  "function COUNTING_MODE() view returns (string)",
  "function EXTENDED_BALLOT_TYPEHASH() view returns (bytes32)",
  "function cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
  "function castVote(uint256 proposalId, uint8 support) returns (uint256)",
  "function castVoteBySig(uint256 proposalId, uint8 support, address voter, bytes signature) returns (uint256)",
  "function castVoteWithReason(uint256 proposalId, uint8 support, string reason) returns (uint256)",
  "function castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string reason, bytes params) returns (uint256)",
  "function castVoteWithReasonAndParamsBySig(uint256 proposalId, uint8 support, address voter, string reason, bytes params, bytes signature) returns (uint256)",
  "function clock() view returns (uint48)",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function execute(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) payable returns (uint256)",
  "function getProposalId(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) view returns (uint256)",
  "function getVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotesWithParams(address account, uint256 timepoint, bytes params) view returns (uint256)",
  "function hasVoted(uint256 proposalId, address account) view returns (bool)",
  "function hashProposal(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) pure returns (uint256)",
  "function name() view returns (string)",
  "function nonces(address owner) view returns (uint256)",
  "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
  "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
  "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
  "function proposalDeadline(uint256 proposalId) view returns (uint256)",
  "function proposalEta(uint256 proposalId) view returns (uint256)",
  "function proposalNeedsQueuing(uint256) view returns (bool)",
  "function proposalProposer(uint256 proposalId) view returns (address)",
  "function proposalSnapshot(uint256 proposalId) view returns (uint256)",
  "function proposalThreshold() view returns (uint256)",
  "function propose(address[] targets, uint256[] values, bytes[] calldatas, string description) returns (uint256)",
  "function queue(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
  "function quorum(uint256 timepoint) view returns (uint256)",
  "function relay(address target, uint256 value, bytes data) payable",
  "function setProposalThreshold(uint256 newProposalThreshold)",
  "function setVotingDelay(uint48 newVotingDelay)",
  "function setVotingPeriod(uint32 newVotingPeriod)",
  "function state(uint256 proposalId) view returns (uint8)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function version() view returns (string)",
  "function votingDelay() view returns (uint256)",
  "function votingPeriod() view returns (uint256)",
  "error FailedCall()",
  "error GovernorAlreadyCastVote(address voter)",
  "error GovernorAlreadyQueuedProposal(uint256 proposalId)",
  "error GovernorDisabledDeposit()",
  "error GovernorInsufficientProposerVotes(address proposer, uint256 votes, uint256 threshold)",
  "error GovernorInvalidProposalLength(uint256 targets, uint256 calldatas, uint256 values)",
  "error GovernorInvalidSignature(address voter)",
  "error GovernorInvalidVoteParams()",
  "error GovernorInvalidVoteType()",
  "error GovernorInvalidVotingPeriod(uint256 votingPeriod)",
  "error GovernorNonexistentProposal(uint256 proposalId)",
  "error GovernorNotQueuedProposal(uint256 proposalId)",
  "error GovernorOnlyExecutor(address account)",
  "error GovernorQueueNotImplemented()",
  "error GovernorRestrictedProposer(address proposer)",
  "error GovernorUnableToCancel(uint256 proposalId, address account)",
  "error GovernorUnexpectedProposalState(uint256 proposalId, uint8 current, bytes32 expectedStates)",
  "error InvalidAccountNonce(address account, uint256 currentNonce)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "event EIP712DomainChanged()",
  "event Initialized(uint64 version)",
  "event ProposalCanceled(uint256 proposalId)",
  "event ProposalCreated(uint256 proposalId, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 voteStart, uint256 voteEnd, string description)",
  "event ProposalExecuted(uint256 proposalId)",
  "event ProposalQueued(uint256 proposalId, uint256 etaSeconds)",
  "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason)",
  "event VoteCastWithParams(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason, bytes params)",
  "function BALLOT_TYPEHASH() view returns (bytes32)",
  "function CLOCK_MODE() view returns (string)",
  "function COUNTING_MODE() view returns (string)",
  "function EXTENDED_BALLOT_TYPEHASH() view returns (bytes32)",
  "function cancel(uint256 proposalId)",
  "function cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
  "function castVote(uint256 proposalId, uint8 support) returns (uint256)",
  "function castVoteBySig(uint256 proposalId, uint8 support, address voter, bytes signature) returns (uint256)",
  "function castVoteWithReason(uint256 proposalId, uint8 support, string reason) returns (uint256)",
  "function castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string reason, bytes params) returns (uint256)",
  "function castVoteWithReasonAndParamsBySig(uint256 proposalId, uint8 support, address voter, string reason, bytes params, bytes signature) returns (uint256)",
  "function clock() view returns (uint48)",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function execute(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) payable returns (uint256)",
  "function execute(uint256 proposalId) payable",
  "function getProposalId(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) view returns (uint256)",
  "function getVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotesWithParams(address account, uint256 timepoint, bytes params) view returns (uint256)",
  "function hasVoted(uint256 proposalId, address account) view returns (bool)",
  "function hashProposal(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) pure returns (uint256)",
  "function name() view returns (string)",
  "function nonces(address owner) view returns (uint256)",
  "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
  "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
  "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
  "function proposalCount() view returns (uint256)",
  "function proposalDeadline(uint256 proposalId) view returns (uint256)",
  "function proposalDetails(uint256 proposalId) view returns (address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash)",
  "function proposalDetailsAt(uint256 index) view returns (uint256 proposalId, address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash)",
  "function proposalEta(uint256 proposalId) view returns (uint256)",
  "function proposalNeedsQueuing(uint256) view returns (bool)",
  "function proposalProposer(uint256 proposalId) view returns (address)",
  "function proposalSnapshot(uint256 proposalId) view returns (uint256)",
  "function proposalThreshold() view returns (uint256)",
  "function propose(address[] targets, uint256[] values, bytes[] calldatas, string description) returns (uint256)",
  "function queue(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
  "function queue(uint256 proposalId)",
  "function quorum(uint256 timepoint) view returns (uint256)",
  "function relay(address target, uint256 value, bytes data) payable",
  "function state(uint256 proposalId) view returns (uint8)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function version() view returns (string)",
  "function votingDelay() view returns (uint256)",
  "function votingPeriod() view returns (uint256)",
  "error CheckpointUnorderedInsertion()",
  "error FailedCall()",
  "error GovernorAlreadyCastVote(address voter)",
  "error GovernorAlreadyQueuedProposal(uint256 proposalId)",
  "error GovernorDisabledDeposit()",
  "error GovernorInsufficientProposerVotes(address proposer, uint256 votes, uint256 threshold)",
  "error GovernorInvalidProposalLength(uint256 targets, uint256 calldatas, uint256 values)",
  "error GovernorInvalidQuorumFraction(uint256 quorumNumerator, uint256 quorumDenominator)",
  "error GovernorInvalidSignature(address voter)",
  "error GovernorInvalidVoteParams()",
  "error GovernorInvalidVoteType()",
  "error GovernorInvalidVotingPeriod(uint256 votingPeriod)",
  "error GovernorNonexistentProposal(uint256 proposalId)",
  "error GovernorNotQueuedProposal(uint256 proposalId)",
  "error GovernorOnlyExecutor(address account)",
  "error GovernorQueueNotImplemented()",
  "error GovernorRestrictedProposer(address proposer)",
  "error GovernorUnableToCancel(uint256 proposalId, address account)",
  "error GovernorUnexpectedProposalState(uint256 proposalId, uint8 current, bytes32 expectedStates)",
  "error InvalidAccountNonce(address account, uint256 currentNonce)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "event EIP712DomainChanged()",
  "event Initialized(uint64 version)",
  "event ProposalCanceled(uint256 proposalId)",
  "event ProposalCreated(uint256 proposalId, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 voteStart, uint256 voteEnd, string description)",
  "event ProposalExecuted(uint256 proposalId)",
  "event ProposalQueued(uint256 proposalId, uint256 etaSeconds)",
  "event QuorumNumeratorUpdated(uint256 oldQuorumNumerator, uint256 newQuorumNumerator)",
  "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason)",
  "event VoteCastWithParams(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason, bytes params)",
  "function BALLOT_TYPEHASH() view returns (bytes32)",
  "function CLOCK_MODE() view returns (string)",
  "function COUNTING_MODE() view returns (string)",
  "function EXTENDED_BALLOT_TYPEHASH() view returns (bytes32)",
  "function cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
  "function castVote(uint256 proposalId, uint8 support) returns (uint256)",
  "function castVoteBySig(uint256 proposalId, uint8 support, address voter, bytes signature) returns (uint256)",
  "function castVoteWithReason(uint256 proposalId, uint8 support, string reason) returns (uint256)",
  "function castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string reason, bytes params) returns (uint256)",
  "function castVoteWithReasonAndParamsBySig(uint256 proposalId, uint8 support, address voter, string reason, bytes params, bytes signature) returns (uint256)",
  "function clock() view returns (uint48)",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function execute(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) payable returns (uint256)",
  "function getProposalId(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) view returns (uint256)",
  "function getVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotesWithParams(address account, uint256 timepoint, bytes params) view returns (uint256)",
  "function hasVoted(uint256 proposalId, address account) view returns (bool)",
  "function hashProposal(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) pure returns (uint256)",
  "function name() view returns (string)",
  "function nonces(address owner) view returns (uint256)",
  "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
  "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
  "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
  "function proposalDeadline(uint256 proposalId) view returns (uint256)",
  "function proposalEta(uint256 proposalId) view returns (uint256)",
  "function proposalNeedsQueuing(uint256) view returns (bool)",
  "function proposalProposer(uint256 proposalId) view returns (address)",
  "function proposalSnapshot(uint256 proposalId) view returns (uint256)",
  "function proposalThreshold() view returns (uint256)",
  "function propose(address[] targets, uint256[] values, bytes[] calldatas, string description) returns (uint256)",
  "function queue(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
  "function quorum(uint256 timepoint) view returns (uint256)",
  "function quorumDenominator() view returns (uint256)",
  "function quorumNumerator(uint256 timepoint) view returns (uint256)",
  "function quorumNumerator() view returns (uint256)",
  "function relay(address target, uint256 value, bytes data) payable",
  "function state(uint256 proposalId) view returns (uint8)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function token() view returns (address)",
  "function updateQuorumNumerator(uint256 newQuorumNumerator)",
  "function version() view returns (string)",
  "function votingDelay() view returns (uint256)",
  "function votingPeriod() view returns (uint256)",
  "error FailedCall()",
  "error GovernorAlreadyCastVote(address voter)",
  "error GovernorAlreadyQueuedProposal(uint256 proposalId)",
  "error GovernorDisabledDeposit()",
  "error GovernorInsufficientProposerVotes(address proposer, uint256 votes, uint256 threshold)",
  "error GovernorInvalidProposalLength(uint256 targets, uint256 calldatas, uint256 values)",
  "error GovernorInvalidSignature(address voter)",
  "error GovernorInvalidVoteParams()",
  "error GovernorInvalidVoteType()",
  "error GovernorInvalidVotingPeriod(uint256 votingPeriod)",
  "error GovernorNonexistentProposal(uint256 proposalId)",
  "error GovernorNotQueuedProposal(uint256 proposalId)",
  "error GovernorOnlyExecutor(address account)",
  "error GovernorQueueNotImplemented()",
  "error GovernorRestrictedProposer(address proposer)",
  "error GovernorUnableToCancel(uint256 proposalId, address account)",
  "error GovernorUnexpectedProposalState(uint256 proposalId, uint8 current, bytes32 expectedStates)",
  "error InvalidAccountNonce(address account, uint256 currentNonce)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "event EIP712DomainChanged()",
  "event Initialized(uint64 version)",
  "event ProposalCanceled(uint256 proposalId)",
  "event ProposalCreated(uint256 proposalId, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 voteStart, uint256 voteEnd, string description)",
  "event ProposalExecuted(uint256 proposalId)",
  "event ProposalQueued(uint256 proposalId, uint256 etaSeconds)",
  "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason)",
  "event VoteCastWithParams(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason, bytes params)",
  "function BALLOT_TYPEHASH() view returns (bytes32)",
  "function CLOCK_MODE() view returns (string)",
  "function COUNTING_MODE() view returns (string)",
  "function EXTENDED_BALLOT_TYPEHASH() view returns (bytes32)",
  "function cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
  "function castVote(uint256 proposalId, uint8 support) returns (uint256)",
  "function castVoteBySig(uint256 proposalId, uint8 support, address voter, bytes signature) returns (uint256)",
  "function castVoteWithReason(uint256 proposalId, uint8 support, string reason) returns (uint256)",
  "function castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string reason, bytes params) returns (uint256)",
  "function castVoteWithReasonAndParamsBySig(uint256 proposalId, uint8 support, address voter, string reason, bytes params, bytes signature) returns (uint256)",
  "function clock() view returns (uint48)",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function execute(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) payable returns (uint256)",
  "function getProposalId(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) view returns (uint256)",
  "function getVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotesWithParams(address account, uint256 timepoint, bytes params) view returns (uint256)",
  "function hasVoted(uint256 proposalId, address account) view returns (bool)",
  "function hashProposal(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) pure returns (uint256)",
  "function name() view returns (string)",
  "function nonces(address owner) view returns (uint256)",
  "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
  "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
  "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
  "function proposalDeadline(uint256 proposalId) view returns (uint256)",
  "function proposalEta(uint256 proposalId) view returns (uint256)",
  "function proposalNeedsQueuing(uint256) view returns (bool)",
  "function proposalProposer(uint256 proposalId) view returns (address)",
  "function proposalSnapshot(uint256 proposalId) view returns (uint256)",
  "function proposalThreshold() view returns (uint256)",
  "function propose(address[] targets, uint256[] values, bytes[] calldatas, string description) returns (uint256)",
  "function queue(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
  "function quorum(uint256 timepoint) view returns (uint256)",
  "function relay(address target, uint256 value, bytes data) payable",
  "function state(uint256 proposalId) view returns (uint8)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function token() view returns (address)",
  "function version() view returns (string)",
  "function votingDelay() view returns (uint256)",
  "function votingPeriod() view returns (uint256)",
  "error CheckpointUnorderedInsertion()",
  "error ECDSAInvalidSignature()",
  "error ECDSAInvalidSignatureLength(uint256 length)",
  "error ECDSAInvalidSignatureS(bytes32 s)",
  "error ERC5805FutureLookup(uint256 timepoint, uint48 clock)",
  "error ERC6372InconsistentClock()",
  "error InvalidAccountNonce(address account, uint256 currentNonce)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "error VotesExpiredSignature(uint256 expiry)",
  "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
  "event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes)",
  "event EIP712DomainChanged()",
  "event Initialized(uint64 version)",
  "function CLOCK_MODE() view returns (string)",
  "function clock() view returns (uint48)",
  "function delegate(address delegatee)",
  "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
  "function delegates(address account) view returns (address)",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function getPastTotalSupply(uint256 timepoint) view returns (uint256)",
  "function getPastVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotes(address account) view returns (uint256)",
  "function nonces(address owner) view returns (uint256)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "event Initialized(uint64 version)",
  "error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId)",
  "error ERC1155InvalidApprover(address approver)",
  "error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength)",
  "error ERC1155InvalidOperator(address operator)",
  "error ERC1155InvalidReceiver(address receiver)",
  "error ERC1155InvalidSender(address sender)",
  "error ERC1155MissingApprovalForAll(address operator, address owner)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
  "event Initialized(uint64 version)",
  "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
  "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
  "event URI(string value, uint256 indexed id)",
  "function balanceOf(address account, uint256 id) view returns (uint256)",
  "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
  "function isApprovedForAll(address account, address operator) view returns (bool)",
  "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data)",
  "function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function uri(uint256) view returns (string)",
  "error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId)",
  "error ERC1155InvalidApprover(address approver)",
  "error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength)",
  "error ERC1155InvalidOperator(address operator)",
  "error ERC1155InvalidReceiver(address receiver)",
  "error ERC1155InvalidSender(address sender)",
  "error ERC1155MissingApprovalForAll(address operator, address owner)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
  "event Initialized(uint64 version)",
  "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
  "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
  "event URI(string value, uint256 indexed id)",
  "function balanceOf(address account, uint256 id) view returns (uint256)",
  "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
  "function burn(address account, uint256 id, uint256 value)",
  "function burnBatch(address account, uint256[] ids, uint256[] values)",
  "function isApprovedForAll(address account, address operator) view returns (bool)",
  "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data)",
  "function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function uri(uint256) view returns (string)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event Initialized(uint64 version)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function decimals() view returns (uint8)",
  "function name() view returns (string)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "error CheckpointUnorderedInsertion()",
  "error ECDSAInvalidSignature()",
  "error ECDSAInvalidSignatureLength(uint256 length)",
  "error ECDSAInvalidSignatureS(bytes32 s)",
  "error ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "error ERC5805FutureLookup(uint256 timepoint, uint48 clock)",
  "error ERC6372InconsistentClock()",
  "error InvalidAccountNonce(address account, uint256 currentNonce)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "error VotesExpiredSignature(uint256 expiry)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
  "event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes)",
  "event EIP712DomainChanged()",
  "event Initialized(uint64 version)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function CLOCK_MODE() view returns (string)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function checkpoints(address account, uint32 pos) view returns (tuple(uint48 _key, uint208 _value))",
  "function clock() view returns (uint48)",
  "function decimals() view returns (uint8)",
  "function delegate(address delegatee)",
  "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
  "function delegates(address account) view returns (address)",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function getPastTotalSupply(uint256 timepoint) view returns (uint256)",
  "function getPastVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotes(address account) view returns (uint256)",
  "function name() view returns (string)",
  "function nonces(address owner) view returns (uint256)",
  "function numCheckpoints(address account) view returns (uint32)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "event Initialized(uint64 version)",
  "error InvalidAccountNonce(address account, uint256 currentNonce)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "event Initialized(uint64 version)",
  "function nonces(address owner) view returns (uint256)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error ReentrancyGuardReentrantCall()",
  "event Initialized(uint64 version)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "event EIP712DomainChanged()",
  "event Initialized(uint64 version)",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "event Initialized(uint64 version)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error alreadyExists(bytes32 id, address source)",
  "event Indexed(address indexed container, bytes32 indexed codeHash)",
  "function get(bytes32 id) view returns (address)",
  "function register(address container)",
  "error CodeNotFoundInIndex(bytes32 codeId)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() view returns (string)",
  "function get() view returns (address[] src, bytes32 name, uint256 version)",
  "function instantiate(bytes data) returns (address[] instances, bytes32 distributionName, uint256 distributionVersion)",
  "error DistributionExists(bytes32 id)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidInstance(address instance)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error RepositoryAlreadyExists(address repository)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "event DistributionAdded(bytes32 indexed id, address distribution, address indexed initializer)",
  "event DistributionRemoved(bytes32 indexed id)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newInstanceId, uint256 indexed version, address[] instances, bytes args)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "function addDistribution(address repository, address initializer, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) requirement)",
  "function addDistribution(bytes32 distributorId, address initializer)",
  "function addNamedDistribution(bytes32 name, bytes32 distributorId, address initializer)",
  "function afterCall(bytes config, bytes4, address maybeInstance, uint256, bytes, bytes)",
  "function beforeCall(bytes config, bytes4, address maybeInstance, uint256, bytes) view returns (bytes)",
  "function calculateDistributorId(bytes32 sourceId, address initializer) pure returns (bytes32)",
  "function calculateDistributorId(address repository, address initializer) pure returns (bytes32)",
  "function changeVersion(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirement)",
  "function distributionComponents(bytes32 distributorsId) view returns (address distributionLocation, address initializer)",
  "function distributionOf(uint256 instance) view returns (bytes32 distributorsId)",
  "function getDistributionId(address instance) view returns (bytes32)",
  "function getDistributionURI(bytes32 distributorsId) view returns (string)",
  "function getDistributions() view returns (bytes32[])",
  "function getInstanceId(address instance) view returns (uint256)",
  "function instanceVersions(uint256 instanceId) view returns (uint64 major, uint64 minor, uint128 patch)",
  "function instantiate(bytes32 distributorId, bytes args) returns (address[], bytes32 distributionName, uint256 distributionVersion)",
  "function numInstances() view returns (uint256)",
  "function removeDistribution(bytes32 distributorId)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function versionRequirements(bytes32 distributorsId) view returns (tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement)",
  "error EmptyReleaseMetadata()",
  "error ReleaseZeroNotAllowed()",
  "error VersionDoesNotExist(uint256 version)",
  "error VersionExists(uint256 version)",
  "error VersionIncrementInvalid(uint256 version)",
  "event ReleaseMetadataUpdated(uint256 indexed version, bytes releaseMetadata)",
  "event VersionAdded(uint256 indexed version, bytes32 indexed source, bytes buildMetadata)",
  "function contractURI() view returns (string)",
  "function get(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) required) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getLatest() view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getMajorReleaseMetadata(uint64 major) view returns (bytes)",
  "function getMajorReleases() view returns (uint64)",
  "function getMinorReleaseMetadata(uint64 major, uint64 minor) view returns (bytes)",
  "function getMinorReleases(uint64 major) view returns (uint64)",
  "function getPatchReleaseMetadata(uint64 major, uint64 minor, uint64 patch) view returns (bytes)",
  "function getPatchReleases(uint64 major, uint64 minor) view returns (uint128)",
  "function newRelease(bytes32 sourceId, bytes metadata, tuple(uint64 major, uint64 minor, uint128 patch) version)",
  "function repositoryName() view returns (bytes32)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function updateReleaseMetadata(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes releaseMetadata)",
  "error DistributionExists(bytes32 id)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidInstance(address instance)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error RepositoryAlreadyExists(address repository)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "event DistributionAdded(bytes32 indexed id, address distribution, address indexed initializer)",
  "event DistributionRemoved(bytes32 indexed id)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newInstanceId, uint256 indexed version, address[] instances, bytes args)",
  "event InstantiationCostChanged(bytes32 indexed id, uint256 cost)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "function _beneficiary() view returns (address)",
  "function addDistribution(address repository, address initializer, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) requirement)",
  "function addDistribution(bytes32 distributorId, address initializer)",
  "function addNamedDistribution(bytes32 name, bytes32 distributorId, address initializer)",
  "function afterCall(bytes config, bytes4, address maybeInstance, uint256, bytes, bytes)",
  "function beforeCall(bytes config, bytes4, address maybeInstance, uint256, bytes) view returns (bytes)",
  "function calculateDistributorId(bytes32 sourceId, address initializer) pure returns (bytes32)",
  "function calculateDistributorId(address repository, address initializer) pure returns (bytes32)",
  "function changeVersion(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirement)",
  "function defaultInstantiationCost() view returns (uint256)",
  "function distributionComponents(bytes32 distributorsId) view returns (address distributionLocation, address initializer)",
  "function distributionOf(uint256 instance) view returns (bytes32 distributorsId)",
  "function getDistributionId(address instance) view returns (bytes32)",
  "function getDistributionURI(bytes32 distributorsId) view returns (string)",
  "function getDistributions() view returns (bytes32[])",
  "function getInstanceId(address instance) view returns (uint256)",
  "function instanceVersions(uint256 instanceId) view returns (uint64 major, uint64 minor, uint128 patch)",
  "function instantiate(bytes32 distributorId, bytes args) returns (address[], bytes32 distributionName, uint256 distributionVersion)",
  "function instantiationCosts(bytes32 id) view returns (uint256)",
  "function numInstances() view returns (uint256)",
  "function paymentToken() view returns (address)",
  "function removeDistribution(bytes32 distributorId)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function versionRequirements(bytes32 distributorsId) view returns (tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement)",
  "function contractURI() view returns (string)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() view returns (string)",
  "function get() view returns (address[] sources, bytes32 distributionName, uint256 distributionVersion)",
  "function instantiate(bytes data) returns (address[] instances, bytes32 distributionName, uint256 distributionVersion)",
  "error DistributionExists(bytes32 id)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidInstance(address instance)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error RepositoryAlreadyExists(address repository)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "event DistributionAdded(bytes32 indexed id, address distribution, address indexed initializer)",
  "event DistributionRemoved(bytes32 indexed id)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newInstanceId, uint256 indexed version, address[] instances, bytes args)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "function addDistribution(address repository, address initializer, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) requirement)",
  "function addDistribution(bytes32 distributorId, address initializer)",
  "function addNamedDistribution(bytes32 name, bytes32 distributorId, address initializer)",
  "function afterCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function beforeCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data) returns (bytes)",
  "function changeVersion(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirement)",
  "function getDistributionId(address instance) view returns (bytes32)",
  "function getDistributionURI(bytes32 distributorId) view returns (string)",
  "function getDistributions() view returns (bytes32[] distributorIds)",
  "function getInstanceId(address instance) view returns (uint256)",
  "function instantiate(bytes32 distributorId, bytes args) returns (address[], bytes32 distributionName, uint256 distributionVersion)",
  "function removeDistribution(bytes32 distributorId)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function afterCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function beforeCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data) returns (bytes)",
  "error initializationFailed(bytes32 id, string reason)",
  "event Initialized(address indexed container, bytes32 indexed codeHash)",
  "function initialize(bytes32 distributionId, address[] instances, bytes32 distributionName, uint256 distributionVersion, bytes args)",
  "error EmptyReleaseMetadata()",
  "error ReleaseZeroNotAllowed()",
  "error VersionDoesNotExist(uint256 version)",
  "error VersionExists(uint256 version)",
  "error VersionIncrementInvalid(uint256 version)",
  "event ReleaseMetadataUpdated(uint256 indexed version, bytes releaseMetadata)",
  "event VersionAdded(uint256 indexed version, bytes32 indexed source, bytes buildMetadata)",
  "function contractURI() view returns (string)",
  "function get(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) required) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getLatest() view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function newRelease(bytes32 sourceId, bytes metadata, tuple(uint64 major, uint64 minor, uint128 patch) version)",
  "function repositoryName() view returns (bytes32)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function updateReleaseMetadata(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes releaseMetadata)",
  "error versionMismatch(string message)",
  "constructor()",
  "error ERC165CheckFailed(address distributor, bytes4 interfaceId, string interfaceName)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error OnlyTargetAllowed(address sender, address target)",
  "error disallowedAddress(address sender, bytes4 selector)",
  "event Initialized(uint64 version)",
  "function afterCall(bytes, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function beforeCall(bytes, bytes4 selector, address sender, uint256 value, bytes data) returns (bytes)",
  "function initialize(tuple(bytes4 selector, address[] disallowedAddresses, bool distributionComponentsOnly)[] methodSettings, address target, address distributor)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "constructor(address owner, bytes32 name, string cURI)",
  "error EmptyReleaseMetadata()",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "error ReleaseZeroNotAllowed()",
  "error VersionDoesNotExist(uint256 version)",
  "error VersionExists(uint256 version)",
  "error VersionIncrementInvalid(uint256 version)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event ReleaseMetadataUpdated(uint256 indexed version, bytes releaseMetadata)",
  "event VersionAdded(uint256 indexed version, bytes32 indexed source, bytes buildMetadata)",
  "function contractURI() view returns (string)",
  "function get(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) required) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getLatest() view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getMajorReleaseMetadata(uint64 major) view returns (bytes)",
  "function getMajorReleases() view returns (uint64)",
  "function getMinorReleaseMetadata(uint64 major, uint64 minor) view returns (bytes)",
  "function getMinorReleases(uint64 major) view returns (uint64)",
  "function getPatchReleaseMetadata(uint64 major, uint64 minor, uint64 patch) view returns (bytes)",
  "function getPatchReleases(uint64 major, uint64 minor) view returns (uint128)",
  "function newRelease(bytes32 sourceId, bytes metadata, tuple(uint64 major, uint64 minor, uint128 patch) version)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function repositoryName() view returns (bytes32)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function transferOwnership(address newOwner)",
  "function updateReleaseMetadata(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes releaseMetadata)",
  "function currentChainId() view returns (uint256)",
  "function inspectEIP712Hashes() view returns (bytes32 _CACHED_DOMAIN_SEPARATOR, uint256 _CACHED_CHAIN_ID, address _CACHED_THIS, bytes32 _HASHED_NAME, bytes32 _HASHED_VERSION, bytes32 _TYPE_HASH, string _NAME, string _VERSION)",
  "function poseidon(bytes32[2] inputs) view returns (bytes32)",
  "function poseidon(bytes32[5] inputs) view returns (bytes32)",
  "function poseidon(bytes32[6] inputs) view returns (bytes32)",
  "error ErrorCannotForceEndGame(uint256 gameId)",
  "error ErrorProposingStageEndFailed(uint256 gameId, uint8 status)",
  "error ballotIntegrityCheckFailed(bytes32 ballotHash, bytes32 ballotHashFromVotes)",
  "event GameOver(uint256 indexed gameId, address[] players, uint256[] scores)",
  "event LastTurn(uint256 indexed gameId)",
  "event OverTime(uint256 indexed gameId)",
  "event ProposalScore(uint256 indexed gameId, uint256 indexed turn, string indexed proposalHash, string proposal, uint256 score)",
  "event ProposalSubmitted(uint256 indexed gameId, uint256 indexed turn, address indexed proposer, uint256 commitment, string encryptedProposal, bytes gmSignature, bytes proposerSignature)",
  "event ProposingStageEnded(uint256 indexed gameId, uint256 indexed roundNumber, uint256 numProposals, string[] proposals)",
  "event StaleGameEnded(uint256 indexed gameId, address winner)",
  "event VoteSubmitted(uint256 indexed gameId, uint256 indexed turn, address indexed player, string sealedBallotId, bytes gmSignature, bytes voterSignature, bytes32 ballotHash)",
  "event VotingStageResults(uint256 indexed gameId, uint256 indexed roundNumber, address indexed winner, address[] players, uint256[] scores, uint256[][] votesSorted, bool[] isActive, uint256[][] finalizedVotingMatrix)",
  "function endProposing(uint256 gameId, tuple(string[] proposals, uint256[2] a, uint256[2][2] b, uint256[2] c, uint256 permutationCommitment) newProposals)",
  "function endVoting(uint256 gameId, uint256[][] votes, uint256[] permutation, uint256 shuffleSalt)",
  "function forceEndStaleGame(uint256 gameId)",
  "function submitProposal(tuple(uint256 gameId, string encryptedProposal, uint256 commitment, address proposer, bytes gmSignature, bytes proposerSignature) params)",
  "function submitVote(uint256 gameId, string sealedBallotId, address voter, bytes gmSignature, bytes voterSignature, bytes32 ballotHash)",
  "error ErrorCannotForceEndGame(uint256 gameId)",
  "error ErrorProposingStageEndFailed(uint256 gameId, uint8 status)",
  "error NoDivisionReminderAllowed(uint256 a, uint256 b)",
  "error RankNotSpecified()",
  "error invalidConfiguration(string message)",
  "error invalidECDSARecoverSigner(bytes32 digest, string message)",
  "error invalidTurnCount(uint256 nTurns)",
  "error zeroValue()",
  "event GameClosed(uint256 indexed gameId)",
  "event GameStarted(uint256 indexed gameId)",
  "event PlayerJoined(uint256 indexed gameId, address indexed participant, bytes32 gmCommitment, string voterPubKey)",
  "event PlayerLeft(uint256 indexed gameId, address indexed player)",
  "event RankTokenExited(address indexed player, uint256 rankId, uint256 amount, uint256 _toMint)",
  "event RegistrationOpen(uint256 indexed gameId)",
  "event RequirementsConfigured(uint256 indexed gameId, tuple(tuple(uint256 have, uint256 lock, uint256 burn, uint256 pay, uint256 bet) ethValues, tuple(address contractAddress, uint256 contractId, uint8 contractType, tuple(tuple(bytes data, uint256 amount) have, tuple(bytes data, uint256 amount) lock, tuple(bytes data, uint256 amount) burn, tuple(bytes data, uint256 amount) pay, tuple(bytes data, uint256 amount) bet) contractRequirement)[] contracts) config)",
  "event StaleGameEnded(uint256 indexed gameId, address winner)",
  "event VotingStageEnded(uint256 indexed gameId, uint256 indexed roundNumber, address[] players, uint256[] scores)",
  "event gameCreated(uint256 gameId, address indexed gm, address indexed creator, uint256 indexed rank)",
  "function canEndProposingStage(uint256 gameId) view returns (uint8)",
  "function canEndVotingStage(uint256 gameId) view returns (bool)",
  "function canStartGame(uint256 gameId) view returns (bool)",
  "function cancelGame(uint256 gameId)",
  "function createAndOpenGame(tuple(uint256 gameRank, uint256 minPlayerCnt, uint256 maxPlayerCnt, uint96 nTurns, uint256 voteCredits, address gameMaster, uint128 minGameTime, uint128 timePerTurn, uint128 timeToJoin, string metadata, uint256 votePhaseDuration, uint256 proposingPhaseDuration) params, tuple(tuple(uint256 have, uint256 lock, uint256 burn, uint256 pay, uint256 bet) ethValues, tuple(address contractAddress, uint256 contractId, uint8 contractType, tuple(tuple(bytes data, uint256 amount) have, tuple(bytes data, uint256 amount) lock, tuple(bytes data, uint256 amount) burn, tuple(bytes data, uint256 amount) pay, tuple(bytes data, uint256 amount) bet) contractRequirement)[] contracts) requirements)",
  "function createGame(tuple(uint256 gameRank, uint256 minPlayerCnt, uint256 maxPlayerCnt, uint96 nTurns, uint256 voteCredits, address gameMaster, uint128 minGameTime, uint128 timePerTurn, uint128 timeToJoin, string metadata, uint256 votePhaseDuration, uint256 proposingPhaseDuration) params) returns (uint256)",
  "function estimateGamePrice(uint128 minGameTime) pure returns (uint256)",
  "function exitRankToken(uint256 rankId, uint256 amount)",
  "function gameCreator(uint256 gameId) view returns (address)",
  "function gameWinner(uint256 gameId) view returns (address)",
  "function getContractState() pure returns (tuple(uint256 numGames, bool contractInitialized, tuple(uint256 principalCost, uint96 principalTimeConstant, address gamePaymentToken, address rankTokenAddress, address beneficiary, uint256 minimumParticipantsInCircle, address derivedToken, address proposalIntegrityVerifier, address poseidon5, address poseidon6, address poseidon2) commonParams))",
  "function getGM(uint256 gameId) view returns (address)",
  "function getGameRank(uint256 gameId) view returns (uint256)",
  "function getPlayerVotedArray(uint256 gameId) view returns (bool[])",
  "function getPlayers(uint256 gameId) view returns (address[])",
  "function getPlayersGames(address player) view returns (uint256[])",
  "function getPlayersMoved(uint256 gameId) view returns (bool[], uint256)",
  "function getScores(uint256 gameId) view returns (address[], uint256[])",
  "function getTurn(uint256 gameId) view returns (uint256)",
  "function isActive(uint256 gameId, address player) view returns (bool)",
  "function isGameOver(uint256 gameId) view returns (bool)",
  "function isLastTurn(uint256 gameId) view returns (bool)",
  "function isOvertime(uint256 gameId) view returns (bool)",
  "function isPlayerInGame(uint256 gameId, address player) view returns (bool)",
  "function isPlayerTurnComplete(uint256 gameId, address player) view returns (bool)",
  "function isProposingStage(uint256 gameId) view returns (bool)",
  "function isRegistrationOpen(uint256 gameId) view returns (bool)",
  "function isVotingStage(uint256 gameId) view returns (bool)",
  "function joinGame(uint256 gameId, bytes gameMasterSignature, bytes32 gmCommitment, uint256 deadline, string voterPubKey) payable",
  "function leaveGame(uint256 gameId)",
  "function madeMove(uint256 gameId, address player) view returns (bool)",
  "function onERC1155BatchReceived(address operator, address, uint256[], uint256[], bytes) view returns (bytes4)",
  "function onERC1155Received(address operator, address, uint256, uint256, bytes) view returns (bytes4)",
  "function onERC721Received(address operator, address, uint256, bytes) view returns (bytes4)",
  "function openRegistration(uint256 gameId)",
  "function setJoinRequirements(uint256 gameId, tuple(tuple(uint256 have, uint256 lock, uint256 burn, uint256 pay, uint256 bet) ethValues, tuple(address contractAddress, uint256 contractId, uint8 contractType, tuple(tuple(bytes data, uint256 amount) have, tuple(bytes data, uint256 amount) lock, tuple(bytes data, uint256 amount) burn, tuple(bytes data, uint256 amount) pay, tuple(bytes data, uint256 amount) bet) contractRequirement)[] contracts) config)",
  "function startGame(uint256 gameId)",
  "function getCommonParams() view returns (tuple(uint256 principalCost, uint96 principalTimeConstant, address gamePaymentToken, address rankTokenAddress, address beneficiary, uint256 minimumParticipantsInCircle, address derivedToken, address proposalIntegrityVerifier, address poseidon5, address poseidon6, address poseidon2))",
  "function getGameState(uint256 gameId) view returns (tuple(uint256 rank, uint256 minGameTime, address createdBy, uint256 numCommitments, uint256 numVotes, tuple(uint256 voteCredits, uint256 maxQuadraticPoints, uint256 minQuadraticPositions) voting, uint256 currentTurn, uint256 turnStartedAt, uint256 registrationOpenAt, bool hasStarted, bool hasEnded, uint256 numPlayersMadeMove, uint256 numActivePlayers, bool isOvertime, uint256 timePerTurn, uint256 maxPlayerCnt, uint256 minPlayerCnt, uint256 timeToJoin, uint256 maxTurns, uint256 voteCredits, address gameMaster, string metadata, uint256 phase, uint256 votePhaseDuration, uint256 proposingPhaseDuration, uint256 phaseStartedAt) state)",
  "function getJoinRequirements(uint256 gameId) view returns (tuple(tuple(uint256 have, uint256 lock, uint256 burn, uint256 pay, uint256 bet) ethValues, uint256 timesRefunded, uint256 timesReleased, uint256 timesFunded, address[] contractAddresses, uint256[] contractIds, uint8[] contractTypes, bool _isConfigured))",
  "function getJoinRequirementsByToken(uint256 gameId, address contractAddress, uint256 contractId, uint8 contractType) view returns (tuple(tuple(bytes data, uint256 amount) have, tuple(bytes data, uint256 amount) lock, tuple(bytes data, uint256 amount) burn, tuple(bytes data, uint256 amount) pay, tuple(bytes data, uint256 amount) bet))",
  "function facetAddress(bytes4 _functionSelector) view returns (address facetAddress_)",
  "function facetAddresses() view returns (address[] facetAddresses_)",
  "function facetFunctionSelectors(address _facet) view returns (bytes4[] facetFunctionSelectors_)",
  "function facets() view returns (tuple(address facetAddress, bytes4[] functionSelectors)[] facets_)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "function owner() view returns (address)",
  "function transferOwnership(address _newOwner)",
  "constructor(address defaultAdmin, address token, uint256 defaultCost)",
  "error AccessControlBadConfirmation()",
  "error AccessControlEnforcedDefaultAdminDelay(uint48 schedule)",
  "error AccessControlEnforcedDefaultAdminRules()",
  "error AccessControlInvalidDefaultAdmin(address defaultAdmin)",
  "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
  "error DistributionExists(bytes32 id)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidInstance(address instance)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error RepositoryAlreadyExists(address repository)",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "event DefaultAdminDelayChangeCanceled()",
  "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
  "event DefaultAdminTransferCanceled()",
  "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
  "event DistributionAdded(bytes32 indexed id, address distribution, address indexed initializer)",
  "event DistributionRemoved(bytes32 indexed id)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newInstanceId, uint256 indexed version, address[] instances, bytes args)",
  "event InstantiationCostChanged(bytes32 indexed id, uint256 cost)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
  "function _beneficiary() view returns (address)",
  "function acceptDefaultAdminTransfer()",
  "function addDistribution(address repository, address initializer, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) requirement)",
  "function addDistribution(bytes32 id, address initializer)",
  "function addNamedDistribution(bytes32 name, bytes32 distributorId, address initializer)",
  "function afterCall(bytes config, bytes4, address maybeInstance, uint256, bytes, bytes)",
  "function beforeCall(bytes config, bytes4, address maybeInstance, uint256, bytes) view returns (bytes)",
  "function beginDefaultAdminTransfer(address newAdmin)",
  "function calculateDistributorId(bytes32 sourceId, address initializer) pure returns (bytes32)",
  "function calculateDistributorId(address repository, address initializer) pure returns (bytes32)",
  "function cancelDefaultAdminTransfer()",
  "function changeDefaultAdminDelay(uint48 newDelay)",
  "function changeVersion(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirement)",
  "function defaultAdmin() view returns (address)",
  "function defaultAdminDelay() view returns (uint48)",
  "function defaultAdminDelayIncreaseWait() view returns (uint48)",
  "function defaultInstantiationCost() view returns (uint256)",
  "function distributionComponents(bytes32 distributorsId) view returns (address distributionLocation, address initializer)",
  "function distributionOf(uint256 instance) view returns (bytes32 distributorsId)",
  "function getDistributionId(address instance) view returns (bytes32)",
  "function getDistributionURI(bytes32 distributorsId) view returns (string)",
  "function getDistributions() view returns (bytes32[])",
  "function getInstanceId(address instance) view returns (uint256)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function instanceVersions(uint256 instanceId) view returns (uint64 major, uint64 minor, uint128 patch)",
  "function instantiate(bytes32 id, bytes args) returns (address[] srcs, bytes32 name, uint256 version)",
  "function instantiationCosts(bytes32 id) view returns (uint256)",
  "function numInstances() view returns (uint256)",
  "function owner() view returns (address)",
  "function paymentToken() view returns (address)",
  "function pendingDefaultAdmin() view returns (address newAdmin, uint48 schedule)",
  "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 schedule)",
  "function removeDistribution(bytes32 id)",
  "function renounceRole(bytes32 role, address account)",
  "function revokeRole(bytes32 role, address account)",
  "function rollbackDefaultAdminDelay()",
  "function setInstantiationCost(bytes32 id, uint256 cost)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function versionRequirements(bytes32 distributorsId) view returns (tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement)",
  "constructor()",
  "error CheckpointUnorderedInsertion()",
  "error FailedCall()",
  "error GovernorAlreadyCastVote(address voter)",
  "error GovernorAlreadyQueuedProposal(uint256 proposalId)",
  "error GovernorDisabledDeposit()",
  "error GovernorInsufficientProposerVotes(address proposer, uint256 votes, uint256 threshold)",
  "error GovernorInvalidProposalLength(uint256 targets, uint256 calldatas, uint256 values)",
  "error GovernorInvalidQuorumFraction(uint256 quorumNumerator, uint256 quorumDenominator)",
  "error GovernorInvalidSignature(address voter)",
  "error GovernorInvalidVoteParams()",
  "error GovernorInvalidVoteType()",
  "error GovernorInvalidVotingPeriod(uint256 votingPeriod)",
  "error GovernorNonexistentProposal(uint256 proposalId)",
  "error GovernorNotQueuedProposal(uint256 proposalId)",
  "error GovernorOnlyExecutor(address account)",
  "error GovernorQueueNotImplemented()",
  "error GovernorRestrictedProposer(address proposer)",
  "error GovernorUnableToCancel(uint256 proposalId, address account)",
  "error GovernorUnexpectedProposalState(uint256 proposalId, uint8 current, bytes32 expectedStates)",
  "error InvalidAccountNonce(address account, uint256 currentNonce)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "event EIP712DomainChanged()",
  "event Initialized(uint64 version)",
  "event ProposalCanceled(uint256 proposalId)",
  "event ProposalCreated(uint256 proposalId, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 voteStart, uint256 voteEnd, string description)",
  "event ProposalExecuted(uint256 proposalId)",
  "event ProposalQueued(uint256 proposalId, uint256 etaSeconds)",
  "event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold)",
  "event QuorumNumeratorUpdated(uint256 oldQuorumNumerator, uint256 newQuorumNumerator)",
  "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason)",
  "event VoteCastWithParams(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason, bytes params)",
  "event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay)",
  "event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod)",
  "function BALLOT_TYPEHASH() view returns (bytes32)",
  "function CLOCK_MODE() view returns (string)",
  "function COUNTING_MODE() pure returns (string)",
  "function EXTENDED_BALLOT_TYPEHASH() view returns (bytes32)",
  "function cancel(uint256 proposalId)",
  "function cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
  "function castVote(uint256 proposalId, uint8 support) returns (uint256)",
  "function castVoteBySig(uint256 proposalId, uint8 support, address voter, bytes signature) returns (uint256)",
  "function castVoteWithReason(uint256 proposalId, uint8 support, string reason) returns (uint256)",
  "function castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string reason, bytes params) returns (uint256)",
  "function castVoteWithReasonAndParamsBySig(uint256 proposalId, uint8 support, address voter, string reason, bytes params, bytes signature) returns (uint256)",
  "function clock() view returns (uint48)",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function execute(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) payable returns (uint256)",
  "function execute(uint256 proposalId) payable",
  "function getProposalId(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) view returns (uint256)",
  "function getVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotesWithParams(address account, uint256 timepoint, bytes params) view returns (uint256)",
  "function hasVoted(uint256 proposalId, address account) view returns (bool)",
  "function hashProposal(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) pure returns (uint256)",
  "function initialize(string name, address _token, uint48 votingDelay, uint32 votingPeriod, uint256 quorum)",
  "function name() view returns (string)",
  "function nonces(address owner) view returns (uint256)",
  "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
  "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
  "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
  "function proposalCount() view returns (uint256)",
  "function proposalDeadline(uint256 proposalId) view returns (uint256)",
  "function proposalDetails(uint256 proposalId) view returns (address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash)",
  "function proposalDetailsAt(uint256 index) view returns (uint256 proposalId, address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash)",
  "function proposalEta(uint256 proposalId) view returns (uint256)",
  "function proposalNeedsQueuing(uint256 proposalId) view returns (bool)",
  "function proposalProposer(uint256 proposalId) view returns (address)",
  "function proposalSnapshot(uint256 proposalId) view returns (uint256)",
  "function proposalThreshold() view returns (uint256)",
  "function proposalVotes(uint256 proposalId) view returns (uint256 againstVotes, uint256 forVotes, uint256 abstainVotes)",
  "function propose(address[] targets, uint256[] values, bytes[] calldatas, string description) returns (uint256)",
  "function queue(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
  "function queue(uint256 proposalId)",
  "function quorum(uint256 timepoint) view returns (uint256)",
  "function quorumDenominator() view returns (uint256)",
  "function quorumNumerator(uint256 timepoint) view returns (uint256)",
  "function quorumNumerator() view returns (uint256)",
  "function relay(address target, uint256 value, bytes data) payable",
  "function setProposalThreshold(uint256 newProposalThreshold)",
  "function setVotingDelay(uint48 newVotingDelay)",
  "function setVotingPeriod(uint32 newVotingPeriod)",
  "function state(uint256 proposalId) view returns (uint8)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function token() view returns (address)",
  "function updateQuorumNumerator(uint256 newQuorumNumerator)",
  "function version() view returns (string)",
  "function votingDelay() view returns (uint256)",
  "function votingPeriod() view returns (uint256)",
  "error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId)",
  "error ERC1155InvalidApprover(address approver)",
  "error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength)",
  "error ERC1155InvalidOperator(address operator)",
  "error ERC1155InvalidReceiver(address receiver)",
  "error ERC1155InvalidSender(address sender)",
  "error ERC1155MissingApprovalForAll(address operator, address owner)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error insufficient(uint256 id, uint256 balance, uint256 required)",
  "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
  "event Initialized(uint64 version)",
  "event TokensLocked(address indexed account, uint256 indexed id, uint256 value)",
  "event TokensUnlocked(address indexed account, uint256 indexed id, uint256 value)",
  "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
  "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
  "event URI(string value, uint256 indexed id)",
  "function balanceOf(address account, uint256 id) view returns (uint256)",
  "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
  "function burn(address account, uint256 id, uint256 value)",
  "function burnBatch(address account, uint256[] ids, uint256[] values)",
  "function isApprovedForAll(address account, address operator) view returns (bool)",
  "function lock(address account, uint256 id, uint256 amount)",
  "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data)",
  "function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function unlock(address account, uint256 id, uint256 amount)",
  "function unlockedBalanceOf(address account, uint256 id) view returns (uint256)",
  "function uri(uint256) view returns (string)",
  "constructor(address initializer, bytes4 initializerSelector, string _distributionName, tuple(uint64 major, uint64 minor, uint128 patch) version, tuple(address loupeFacet, address inspectorFacet, address RankifyMainFacet, address RankifyReqsFacet, address RankifyGMFacet, address OwnershipFacet) addresses)",
  "error CodeNotFoundInIndex(bytes32 codeId)",
  "error FailedDeployment()",
  "error InsufficientBalance(uint256 balance, uint256 needed)",
  "error StringTooLong(string str)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() pure returns (string)",
  "function get() view returns (address[], bytes32 name, uint256 version)",
  "function instantiate(bytes) returns (address[] instances, bytes32, uint256)",
  "constructor(address owner)",
  "error CodeNotFoundInIndex(bytes32 codeId)",
  "error FailedDeployment()",
  "error InsufficientBalance(uint256 balance, uint256 needed)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() pure returns (string)",
  "function get() view returns (address[] src, bytes32 name, uint256 version)",
  "function instantiate(bytes) returns (address[], bytes32, uint256)",
  "error CodeNotFoundInIndex(bytes32 codeId)",
  "error FailedDeployment()",
  "error InsufficientBalance(uint256 balance, uint256 needed)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() pure returns (string)",
  "function get() view returns (address[], bytes32 name, uint256 version)",
  "function instantiate(bytes) returns (address[], bytes32, uint256)",
  "constructor(address[] zkpVerifier, bytes32 rankTokenCodeId, bytes32 RankifyDIistributionId, bytes32 accessManagerId, bytes32 governanceERC20BaseId, bytes32 DAOId, string distributionName, tuple(uint64 major, uint64 minor, uint128 patch) distributionVersion, uint256 minParticipantsInCircle)",
  "error FailedDeployment()",
  "error InsufficientBalance(uint256 balance, uint256 needed)",
  "error InvalidShortString()",
  "error StringTooLong(string str)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() pure returns (string)",
  "function distributionSchema(tuple(tuple(string tokenName, string tokenSymbol, uint256[] preMintAmounts, address[] preMintReceivers, string orgName, uint48 votingDelay, uint32 votingPeriod, uint256 quorum) govSettings, tuple(uint256 principalCost, uint96 principalTimeConstant, string rankTokenURI, string rankTokenContractURI, address paymentToken) rankifySettings) args) pure returns (tuple(tuple(string tokenName, string tokenSymbol, uint256[] preMintAmounts, address[] preMintReceivers, string orgName, uint48 votingDelay, uint32 votingPeriod, uint256 quorum) govSettings, tuple(uint256 principalCost, uint96 principalTimeConstant, string rankTokenURI, string rankTokenContractURI, address paymentToken) rankifySettings))",
  "function get() view returns (address[] sources, bytes32, uint256)",
  "function instantiate(bytes data) returns (address[] instances, bytes32 distributionName, uint256 distributionVersion)",
  "function currentChainId() view returns (uint256)",
  "function inspectEIP712Hashes() view returns (bytes32 _CACHED_DOMAIN_SEPARATOR, uint256 _CACHED_CHAIN_ID, address _CACHED_THIS, bytes32 _HASHED_NAME, bytes32 _HASHED_VERSION, bytes32 _TYPE_HASH, string _NAME, string _VERSION)",
  "function poseidon(bytes32[2] inputs) view returns (bytes32)",
  "function poseidon(bytes32[5] inputs) view returns (bytes32)",
  "function poseidon(bytes32[6] inputs) view returns (bytes32)",
  "error ErrorCannotForceEndGame(uint256 gameId)",
  "error ErrorProposingStageEndFailed(uint256 gameId, uint8 status)",
  "error ballotIntegrityCheckFailed(bytes32 ballotHash, bytes32 ballotHashFromVotes)",
  "error invalidECDSARecoverSigner(bytes32 digest, string message)",
  "event GameOver(uint256 indexed gameId, address[] players, uint256[] scores)",
  "event LastTurn(uint256 indexed gameId)",
  "event OverTime(uint256 indexed gameId)",
  "event ProposalScore(uint256 indexed gameId, uint256 indexed turn, string indexed proposalHash, string proposal, uint256 score)",
  "event ProposalSubmitted(uint256 indexed gameId, uint256 indexed turn, address indexed proposer, uint256 commitment, string encryptedProposal, bytes gmSignature, bytes proposerSignature)",
  "event ProposingStageEnded(uint256 indexed gameId, uint256 indexed roundNumber, uint256 numProposals, string[] proposals)",
  "event StaleGameEnded(uint256 indexed gameId, address winner)",
  "event VoteSubmitted(uint256 indexed gameId, uint256 indexed turn, address indexed player, string sealedBallotId, bytes gmSignature, bytes voterSignature, bytes32 ballotHash)",
  "event VotingStageResults(uint256 indexed gameId, uint256 indexed roundNumber, address indexed winner, address[] players, uint256[] scores, uint256[][] votesSorted, bool[] isActive, uint256[][] finalizedVotingMatrix)",
  "function endProposing(uint256 gameId, tuple(string[] proposals, uint256[2] a, uint256[2][2] b, uint256[2] c, uint256 permutationCommitment) newProposals)",
  "function endVoting(uint256 gameId, uint256[][] votes, uint256[] permutation, uint256 shuffleSalt)",
  "function forceEndStaleGame(uint256 gameId)",
  "function submitProposal(tuple(uint256 gameId, string encryptedProposal, uint256 commitment, address proposer, bytes gmSignature, bytes proposerSignature) params)",
  "function submitVote(uint256 gameId, string sealedBallotId, address voter, bytes gmSignature, bytes voterSignature, bytes32 ballotHash)",
  "error ErrorCannotForceEndGame(uint256 gameId)",
  "error ErrorProposingStageEndFailed(uint256 gameId, uint8 status)",
  "error NoDivisionReminderAllowed(uint256 a, uint256 b)",
  "error RankNotSpecified()",
  "error invalidConfiguration(string message)",
  "error invalidECDSARecoverSigner(bytes32 digest, string message)",
  "error invalidTurnCount(uint256 nTurns)",
  "error zeroValue()",
  "event GameClosed(uint256 indexed gameId)",
  "event GameStarted(uint256 indexed gameId)",
  "event PlayerJoined(uint256 indexed gameId, address indexed participant, bytes32 gmCommitment, string voterPubKey)",
  "event PlayerLeft(uint256 indexed gameId, address indexed player)",
  "event RankTokenExited(address indexed player, uint256 rankId, uint256 amount, uint256 _toMint)",
  "event RegistrationOpen(uint256 indexed gameId)",
  "event RequirementsConfigured(uint256 indexed gameId, tuple(tuple(uint256 have, uint256 lock, uint256 burn, uint256 pay, uint256 bet) ethValues, tuple(address contractAddress, uint256 contractId, uint8 contractType, tuple(tuple(bytes data, uint256 amount) have, tuple(bytes data, uint256 amount) lock, tuple(bytes data, uint256 amount) burn, tuple(bytes data, uint256 amount) pay, tuple(bytes data, uint256 amount) bet) contractRequirement)[] contracts) config)",
  "event StaleGameEnded(uint256 indexed gameId, address winner)",
  "event VotingStageEnded(uint256 indexed gameId, uint256 indexed roundNumber, address[] players, uint256[] scores)",
  "event gameCreated(uint256 gameId, address indexed gm, address indexed creator, uint256 indexed rank)",
  "function canEndProposingStage(uint256 gameId) view returns (uint8)",
  "function canEndVotingStage(uint256 gameId) view returns (bool)",
  "function canStartGame(uint256 gameId) view returns (bool)",
  "function cancelGame(uint256 gameId)",
  "function createAndOpenGame(tuple(uint256 gameRank, uint256 minPlayerCnt, uint256 maxPlayerCnt, uint96 nTurns, uint256 voteCredits, address gameMaster, uint128 minGameTime, uint128 timePerTurn, uint128 timeToJoin, string metadata, uint256 votePhaseDuration, uint256 proposingPhaseDuration) params, tuple(tuple(uint256 have, uint256 lock, uint256 burn, uint256 pay, uint256 bet) ethValues, tuple(address contractAddress, uint256 contractId, uint8 contractType, tuple(tuple(bytes data, uint256 amount) have, tuple(bytes data, uint256 amount) lock, tuple(bytes data, uint256 amount) burn, tuple(bytes data, uint256 amount) pay, tuple(bytes data, uint256 amount) bet) contractRequirement)[] contracts) requirements)",
  "function createGame(tuple(uint256 gameRank, uint256 minPlayerCnt, uint256 maxPlayerCnt, uint96 nTurns, uint256 voteCredits, address gameMaster, uint128 minGameTime, uint128 timePerTurn, uint128 timeToJoin, string metadata, uint256 votePhaseDuration, uint256 proposingPhaseDuration) params) returns (uint256)",
  "function estimateGamePrice(uint128 minGameTime) pure returns (uint256)",
  "function exitRankToken(uint256 rankId, uint256 amount)",
  "function gameCreator(uint256 gameId) view returns (address)",
  "function gameWinner(uint256 gameId) view returns (address)",
  "function getContractState() pure returns (tuple(uint256 numGames, bool contractInitialized, tuple(uint256 principalCost, uint96 principalTimeConstant, address gamePaymentToken, address rankTokenAddress, address beneficiary, uint256 minimumParticipantsInCircle, address derivedToken, address proposalIntegrityVerifier, address poseidon5, address poseidon6, address poseidon2) commonParams))",
  "function getGM(uint256 gameId) view returns (address)",
  "function getGameRank(uint256 gameId) view returns (uint256)",
  "function getPlayerVotedArray(uint256 gameId) view returns (bool[])",
  "function getPlayers(uint256 gameId) view returns (address[])",
  "function getPlayersGames(address player) view returns (uint256[])",
  "function getPlayersMoved(uint256 gameId) view returns (bool[], uint256)",
  "function getScores(uint256 gameId) view returns (address[], uint256[])",
  "function getTurn(uint256 gameId) view returns (uint256)",
  "function isActive(uint256 gameId, address player) view returns (bool)",
  "function isGameOver(uint256 gameId) view returns (bool)",
  "function isLastTurn(uint256 gameId) view returns (bool)",
  "function isOvertime(uint256 gameId) view returns (bool)",
  "function isPlayerInGame(uint256 gameId, address player) view returns (bool)",
  "function isPlayerTurnComplete(uint256 gameId, address player) view returns (bool)",
  "function isProposingStage(uint256 gameId) view returns (bool)",
  "function isRegistrationOpen(uint256 gameId) view returns (bool)",
  "function isVotingStage(uint256 gameId) view returns (bool)",
  "function joinGame(uint256 gameId, bytes gameMasterSignature, bytes32 gmCommitment, uint256 deadline, string voterPubKey) payable",
  "function leaveGame(uint256 gameId)",
  "function madeMove(uint256 gameId, address player) view returns (bool)",
  "function onERC1155BatchReceived(address operator, address, uint256[], uint256[], bytes) view returns (bytes4)",
  "function onERC1155Received(address operator, address, uint256, uint256, bytes) view returns (bytes4)",
  "function onERC721Received(address operator, address, uint256, bytes) view returns (bytes4)",
  "function openRegistration(uint256 gameId)",
  "function setJoinRequirements(uint256 gameId, tuple(tuple(uint256 have, uint256 lock, uint256 burn, uint256 pay, uint256 bet) ethValues, tuple(address contractAddress, uint256 contractId, uint8 contractType, tuple(tuple(bytes data, uint256 amount) have, tuple(bytes data, uint256 amount) lock, tuple(bytes data, uint256 amount) burn, tuple(bytes data, uint256 amount) pay, tuple(bytes data, uint256 amount) bet) contractRequirement)[] contracts) config)",
  "function startGame(uint256 gameId)",
  "function getCommonParams() view returns (tuple(uint256 principalCost, uint96 principalTimeConstant, address gamePaymentToken, address rankTokenAddress, address beneficiary, uint256 minimumParticipantsInCircle, address derivedToken, address proposalIntegrityVerifier, address poseidon5, address poseidon6, address poseidon2))",
  "function getGameState(uint256 gameId) view returns (tuple(uint256 rank, uint256 minGameTime, address createdBy, uint256 numCommitments, uint256 numVotes, tuple(uint256 voteCredits, uint256 maxQuadraticPoints, uint256 minQuadraticPositions) voting, uint256 currentTurn, uint256 turnStartedAt, uint256 registrationOpenAt, bool hasStarted, bool hasEnded, uint256 numPlayersMadeMove, uint256 numActivePlayers, bool isOvertime, uint256 timePerTurn, uint256 maxPlayerCnt, uint256 minPlayerCnt, uint256 timeToJoin, uint256 maxTurns, uint256 voteCredits, address gameMaster, string metadata, uint256 phase, uint256 votePhaseDuration, uint256 proposingPhaseDuration, uint256 phaseStartedAt) state)",
  "function getJoinRequirements(uint256 gameId) view returns (tuple(tuple(uint256 have, uint256 lock, uint256 burn, uint256 pay, uint256 bet) ethValues, uint256 timesRefunded, uint256 timesReleased, uint256 timesFunded, address[] contractAddresses, uint256[] contractIds, uint8[] contractTypes, bool _isConfigured))",
  "function getJoinRequirementsByToken(uint256 gameId, address contractAddress, uint256 contractId, uint8 contractType) view returns (tuple(tuple(bytes data, uint256 amount) have, tuple(bytes data, uint256 amount) lock, tuple(bytes data, uint256 amount) burn, tuple(bytes data, uint256 amount) pay, tuple(bytes data, uint256 amount) bet))",
  "function init()",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "event Initialized(uint64 version)",
  "function init(string name, string version, tuple(address rewardToken, uint256 principalCost, uint96 principalTimeConstant, uint256 minimumParticipantsInCircle, address paymentToken, address beneficiary, address derivedToken, address proposalIntegrityVerifier, address poseidon5, address poseidon6, address poseidon2) initData)",
  "function onERC1155BatchReceived(address operator, address from, uint256[] ids, uint256[] values, bytes data) returns (bytes4)",
  "function onERC1155Received(address operator, address from, uint256 id, uint256 value, bytes data) returns (bytes4)",
  "error invalidConfiguration(string message)",
  "error invalidECDSARecoverSigner(bytes32 digest, string message)",
  "error zeroValue()",
  "error insufficient(uint256 id, uint256 balance, uint256 required)",
  "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
  "event TokensLocked(address indexed account, uint256 indexed id, uint256 value)",
  "event TokensUnlocked(address indexed account, uint256 indexed id, uint256 value)",
  "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
  "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
  "event URI(string value, uint256 indexed id)",
  "function balanceOf(address account, uint256 id) view returns (uint256)",
  "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
  "function burn(address account, uint256 id, uint256 value)",
  "function isApprovedForAll(address account, address operator) view returns (bool)",
  "function lock(address account, uint256 id, uint256 amount)",
  "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data)",
  "function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function unlock(address account, uint256 id, uint256 amount)",
  "function unlockedBalanceOf(address account, uint256 id) view returns (uint256)",
  "error insufficient(uint256 id, uint256 balance, uint256 required)",
  "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
  "event RankingInstanceUpdated(address indexed newRankingInstance)",
  "event TokensLocked(address indexed account, uint256 indexed id, uint256 value)",
  "event TokensUnlocked(address indexed account, uint256 indexed id, uint256 value)",
  "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
  "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
  "event URI(string value, uint256 indexed id)",
  "function balanceOf(address account, uint256 id) view returns (uint256)",
  "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
  "function batchMint(address to, uint256[] ids, uint256[] amounts, bytes data)",
  "function burn(address account, uint256 id, uint256 value)",
  "function isApprovedForAll(address account, address operator) view returns (bool)",
  "function lock(address account, uint256 id, uint256 amount)",
  "function mint(address to, uint256 amount, uint256 poolId, bytes data)",
  "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data)",
  "function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function unlock(address account, uint256 id, uint256 amount)",
  "function unlockedBalanceOf(address account, uint256 id) view returns (uint256)",
  "error ErrorCannotForceEndGame(uint256 gameId)",
  "error ErrorProposingStageEndFailed(uint256 gameId, uint8 status)",
  "error NoDivisionReminderAllowed(uint256 a, uint256 b)",
  "error RankNotSpecified()",
  "error invalidTurnCount(uint256 nTurns)",
  "event GameClosed(uint256 indexed gameId)",
  "event GameStarted(uint256 indexed gameId)",
  "event PlayerJoined(uint256 indexed gameId, address indexed participant, bytes32 gmCommitment, string voterPubKey)",
  "event PlayerLeft(uint256 indexed gameId, address indexed player)",
  "event RankTokenExited(address indexed player, uint256 rankId, uint256 amount, uint256 _toMint)",
  "event RegistrationOpen(uint256 indexed gameId)",
  "event RequirementsConfigured(uint256 indexed gameId, tuple(tuple(uint256 have, uint256 lock, uint256 burn, uint256 pay, uint256 bet) ethValues, tuple(address contractAddress, uint256 contractId, uint8 contractType, tuple(tuple(bytes data, uint256 amount) have, tuple(bytes data, uint256 amount) lock, tuple(bytes data, uint256 amount) burn, tuple(bytes data, uint256 amount) pay, tuple(bytes data, uint256 amount) bet) contractRequirement)[] contracts) config)",
  "event StaleGameEnded(uint256 indexed gameId, address winner)",
  "event gameCreated(uint256 gameId, address indexed gm, address indexed creator, uint256 indexed rank)",
  "error ECDSAInvalidSignature()",
  "error ECDSAInvalidSignatureLength(uint256 length)",
  "error ECDSAInvalidSignatureS(bytes32 s)",
  "error RankNotSpecified()",
  "error invalidConfiguration(string message)",
  "error invalidECDSARecoverSigner(bytes32 digest, string message)",
  "error invalidTurnCount(uint256 nTurns)",
  "error quadraticVotingError(string parameter, uint256 arg, uint256 arg2)",
  "function _PROPOSAL_PROOF_TYPEHASH() view returns (bytes32)",
  "function _VOTE_PROOF_TYPEHASH() view returns (bytes32)",
  "function _VOTE_SUBMIT_PROOF_TYPEHASH() view returns (bytes32)",
  "function compareStrings(string a, string b) pure returns (bool)",
  "function enforceGameExists(uint256 gameId) view",
  "function enforceIsGM(uint256 gameId, address candidate) view",
  "function enforceIsGameCreator(uint256 gameId, address candidate) view",
  "function enforceIsInitialized() view",
  "function getGamePrice(uint128 minGameTime, tuple(uint256 principalCost, uint96 principalTimeConstant, address gamePaymentToken, address rankTokenAddress, address beneficiary, uint256 minimumParticipantsInCircle, address derivedToken, address proposalIntegrityVerifier, address poseidon5, address poseidon6, address poseidon2) commonParams) pure returns (uint256)",
  "constructor(string uri_, address owner)",
  "error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId)",
  "error ERC1155InvalidApprover(address approver)",
  "error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength)",
  "error ERC1155InvalidOperator(address operator)",
  "error ERC1155InvalidReceiver(address receiver)",
  "error ERC1155InvalidSender(address sender)",
  "error ERC1155MissingApprovalForAll(address operator, address owner)",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
  "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
  "event URI(string value, uint256 indexed id)",
  "function balanceOf(address account, uint256 id) view returns (uint256)",
  "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
  "function batchMint(address to, uint256[] ids, uint256[] amounts, bytes data)",
  "function burn(address account, uint256 id, uint256 value)",
  "function burnBatch(address account, uint256[] ids, uint256[] values)",
  "function isApprovedForAll(address account, address operator) view returns (bool)",
  "function levelUp(address to, uint256 id, bytes data)",
  "function mint(address to, uint256 amount, uint256 poolId, bytes data)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data)",
  "function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function transferOwnership(address newOwner)",
  "function uri(uint256) view returns (string)",
  "constructor(string name_, string symbol_, address owner)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function burn(uint256 value)",
  "function burnFrom(address account, uint256 value)",
  "function decimals() view returns (uint8)",
  "function mint(address to, uint256 amount)",
  "function name() view returns (string)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "function transferOwnership(address newOwner)",
  "constructor(string name_, string symbol_, address owner)",
  "error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner)",
  "error ERC721InsufficientApproval(address operator, uint256 tokenId)",
  "error ERC721InvalidApprover(address approver)",
  "error ERC721InvalidOperator(address operator)",
  "error ERC721InvalidOwner(address owner)",
  "error ERC721InvalidReceiver(address receiver)",
  "error ERC721InvalidSender(address sender)",
  "error ERC721NonexistentToken(uint256 tokenId)",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
  "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
  "function approve(address to, uint256 tokenId)",
  "function balanceOf(address owner) view returns (uint256)",
  "function burn(uint256 tokenId)",
  "function getApproved(uint256 tokenId) view returns (address)",
  "function getLastTokenId() view returns (uint256)",
  "function isApprovedForAll(address owner, address operator) view returns (bool)",
  "function levelUp(address to, uint256 id, bytes)",
  "function mint(address to, uint256 tokenId, bytes)",
  "function mintNext(address to)",
  "function name() view returns (string)",
  "function owner() view returns (address)",
  "function ownerOf(uint256 tokenId) view returns (address)",
  "function renounceOwnership()",
  "function safeTransferFrom(address from, address to, uint256 tokenId)",
  "function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function symbol() view returns (string)",
  "function tokenURI(uint256 tokenId) view returns (string)",
  "function transferFrom(address from, address to, uint256 tokenId)",
  "function transferOwnership(address newOwner)",
  "constructor()",
  "error ReentrancyGuardReentrantCall()",
  "function createPosition(bytes32 position, tuple(tuple(uint256 have, uint256 lock, uint256 burn, uint256 pay, uint256 bet) ethValues, tuple(address contractAddress, uint256 contractId, uint8 contractType, tuple(tuple(bytes data, uint256 amount) have, tuple(bytes data, uint256 amount) lock, tuple(bytes data, uint256 amount) burn, tuple(bytes data, uint256 amount) pay, tuple(bytes data, uint256 amount) bet) contractRequirement)[] contracts) configuration)",
  "function fund(bytes32 _positionName) payable",
  "function onERC1155BatchReceived(address operator, address, uint256[], uint256[], bytes) view returns (bytes4)",
  "function onERC1155Received(address operator, address, uint256, uint256, bytes) view returns (bytes4)",
  "function onERC721Received(address operator, address, uint256, bytes) view returns (bytes4)",
  "function participants(uint256) view returns (address)",
  "function refund(bytes32 _positionName, address to)",
  "function refundBatch(bytes32 _positionName)",
  "function release(bytes32 _positionName, address payee, address beneficiary)",
  "function releaseAll(bytes32 _positionName, address payee, address beneficiary)",
  "constructor()",
  "event GameClosed(uint256 indexed gameId)",
  "event GameOver(uint256 indexed gameId, address[] indexed players, uint256[] indexed scores)",
  "event GameStarted(uint256 indexed gameId)",
  "event LastTurn(uint256 indexed gameId)",
  "event OverTime(uint256 indexed gameId)",
  "event PlayerJoined(uint256 indexed gameId, address participant)",
  "event PlayerLeft(uint256 indexed gameId, address indexed player)",
  "event ProposalScore(uint256 indexed gameId, uint256 indexed turn, string indexed proposalHash, string proposal, uint256 score)",
  "event ProposalSubmitted(uint256 indexed gameId, uint256 indexed turn, address indexed proposer, bytes32 commitment, string proposalEncryptedByGM)",
  "event RegistrationOpen(uint256 indexed gameid)",
  "event VoteSubmitted(uint256 indexed gameId, uint256 indexed turn, address indexed player, string votesHidden)",
  "event gameCreated(uint256 gameId, address indexed gm, address indexed creator, uint256 indexed rank)",
  "function fireAll()",
  "constructor(address owner, bytes32 name, string contractURI)",
  "error EmptyReleaseMetadata()",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "error ReleaseZeroNotAllowed()",
  "error VersionDoesNotExist(uint256 version)",
  "error VersionExists(uint256 version)",
  "error VersionIncrementInvalid(uint256 version)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event ReleaseMetadataUpdated(uint256 indexed version, bytes releaseMetadata)",
  "event VersionAdded(uint256 indexed version, bytes32 indexed source, bytes buildMetadata)",
  "function contractURI() view returns (string)",
  "function get(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) required) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getLatest() view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getMajorReleaseMetadata(uint64 major) view returns (bytes)",
  "function getMajorReleases() view returns (uint64)",
  "function getMinorReleaseMetadata(uint64 major, uint64 minor) view returns (bytes)",
  "function getMinorReleases(uint64 major) view returns (uint64)",
  "function getPatchReleaseMetadata(uint64 major, uint64 minor, uint64 patch) view returns (bytes)",
  "function getPatchReleases(uint64 major, uint64 minor) view returns (uint128)",
  "function newRelease(bytes32 sourceId, bytes metadata, tuple(uint64 major, uint64 minor, uint128 patch) version)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function repositoryName() view returns (bytes32)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function transferOwnership(address newOwner)",
  "function updateReleaseMetadata(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes releaseMetadata)",
  "constructor(string _name, string _symbol, tuple(address[] receivers, uint256[] amounts) _mintSettings, address _accessManager)",
  "error CheckpointUnorderedInsertion()",
  "error ECDSAInvalidSignature()",
  "error ECDSAInvalidSignatureLength(uint256 length)",
  "error ECDSAInvalidSignatureS(bytes32 s)",
  "error ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "error ERC5805FutureLookup(uint256 timepoint, uint48 clock)",
  "error ERC6372InconsistentClock()",
  "error InvalidAccountNonce(address account, uint256 currentNonce)",
  "error InvalidInitialization()",
  "error MintSettingsArrayLengthMismatch(uint256 receiversArrayLength, uint256 amountsArrayLength)",
  "error NotInitializing()",
  "error ReentrancyGuardReentrantCall()",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "error VotesExpiredSignature(uint256 expiry)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
  "event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes)",
  "event EIP712DomainChanged()",
  "event Initialized(uint64 version)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function CLOCK_MODE() view returns (string)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function checkpoints(address account, uint32 pos) view returns (tuple(uint48 _key, uint208 _value))",
  "function clock() view returns (uint48)",
  "function decimals() view returns (uint8)",
  "function delegate(address delegatee)",
  "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
  "function delegates(address account) view returns (address)",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function getPastTotalSupply(uint256 timepoint) view returns (uint256)",
  "function getPastVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotes(address account) view returns (uint256)",
  "function initialize(string _name, string _symbol, tuple(address[] receivers, uint256[] amounts) _mintSettings, address accessManager)",
  "function mint(address to, uint256 amount)",
  "function name() view returns (string)",
  "function nonces(address owner) view returns (uint256)",
  "function numCheckpoints(address account) view returns (uint32)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "function mint(address _to, uint256 _amount)",
  "constructor(string uri_, string cURI, address accessLayer, address owner_)",
  "error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId)",
  "error ERC1155InvalidApprover(address approver)",
  "error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength)",
  "error ERC1155InvalidOperator(address operator)",
  "error ERC1155InvalidReceiver(address receiver)",
  "error ERC1155InvalidSender(address sender)",
  "error ERC1155MissingApprovalForAll(address operator, address owner)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "error insufficient(uint256 id, uint256 balance, uint256 required)",
  "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
  "event Initialized(uint64 version)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event RankingInstanceUpdated(address indexed newRankingInstance)",
  "event TokensLocked(address indexed account, uint256 indexed id, uint256 value)",
  "event TokensUnlocked(address indexed account, uint256 indexed id, uint256 value)",
  "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
  "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
  "event URI(string value, uint256 indexed id)",
  "function balanceOf(address account, uint256 id) view returns (uint256)",
  "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
  "function batchMint(address to, uint256[] ids, uint256[] amounts, bytes data)",
  "function burn(address account, uint256 id, uint256 value)",
  "function burnBatch(address account, uint256[] ids, uint256[] values)",
  "function contractURI() view returns (string)",
  "function initialize(string uri_, string cURI, address accessLayer, address owner_)",
  "function isApprovedForAll(address account, address operator) view returns (bool)",
  "function lock(address account, uint256 id, uint256 amount)",
  "function mint(address to, uint256 amount, uint256 level, bytes data)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data)",
  "function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function setContractURI(string uri_)",
  "function setURI(string uri_)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function transferOwnership(address newOwner)",
  "function unlock(address account, uint256 id, uint256 amount)",
  "function unlockedBalanceOf(address account, uint256 id) view returns (uint256)",
  "function uri(uint256) view returns (string)",
  "constructor(address owner)",
  "error CheckpointUnorderedInsertion()",
  "error ECDSAInvalidSignature()",
  "error ECDSAInvalidSignatureLength(uint256 length)",
  "error ECDSAInvalidSignatureS(bytes32 s)",
  "error ERC20ExceededCap(uint256 increasedSupply, uint256 cap)",
  "error ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidCap(uint256 cap)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "error ERC5805FutureLookup(uint256 timepoint, uint48 clock)",
  "error ERC6372InconsistentClock()",
  "error InvalidAccountNonce(address account, uint256 currentNonce)",
  "error InvalidShortString()",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "error StringTooLong(string str)",
  "error VotesExpiredSignature(uint256 expiry)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
  "event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes)",
  "event EIP712DomainChanged()",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function CLOCK_MODE() view returns (string)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function burn(uint256 value)",
  "function burnFrom(address account, uint256 value)",
  "function cap() view returns (uint256)",
  "function checkpoints(address account, uint32 pos) view returns (tuple(uint48 _key, uint208 _value))",
  "function clock() view returns (uint48)",
  "function decimals() view returns (uint8)",
  "function delegate(address delegatee)",
  "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
  "function delegates(address account) view returns (address)",
  "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
  "function getPastTotalSupply(uint256 timepoint) view returns (uint256)",
  "function getPastVotes(address account, uint256 timepoint) view returns (uint256)",
  "function getVotes(address account) view returns (uint256)",
  "function mint(address to, uint256 amount)",
  "function name() view returns (string)",
  "function nonces(address owner) view returns (uint256)",
  "function numCheckpoints(address account) view returns (uint32)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "function transferOwnership(address newOwner)",
  "function createDao(tuple(address trustedForwarder, string daoURI, string subdomain, bytes metadata) daoSettings, tuple(tuple(tuple(uint8 release, uint16 build) versionTag, address pluginSetupRepo) pluginSetupRef, bytes data)[] pluginSettings) returns (address)",
  "function createVersion(uint8 _release, address _pluginSetupAddress, bytes _buildMetadata, bytes _releaseMetadata)",
  "function getLatestVersion(uint8 _release) view returns (tuple(tuple(uint8 release, uint16 build) tag, address pluginSetup, bytes buildMetadata))",
  "function latestRelease() view returns (uint8)",
  "function updateReleaseMetadata(uint8 _release, bytes _releaseMetadata)",
  "constructor(address _contractOwner, address _diamondCutFacet) payable",
  "event DiamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "constructor(address _contractOwner, address _diamondCutFacet) payable",
  "error functionDoesNotExist(bytes4 selector)",
  "event DiamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event DiamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata)",
  "function diamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata)",
  "function facetAddress(bytes4 _functionSelector) view returns (address facetAddress_)",
  "function facetAddresses() view returns (address[] facetAddresses_)",
  "function facetFunctionSelectors(address _facet) view returns (bytes4[] facetFunctionSelectors_)",
  "function facets() view returns (tuple(address facetAddress, bytes4[] functionSelectors)[] facets_)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "function owner() view returns (address)",
  "function transferOwnership(address _newOwner)",
  "event TestEvent(address something)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function test1Func1()",
  "function test1Func10()",
  "function test1Func11()",
  "function test1Func12()",
  "function test1Func13()",
  "function test1Func14()",
  "function test1Func15()",
  "function test1Func16()",
  "function test1Func17()",
  "function test1Func18()",
  "function test1Func19()",
  "function test1Func2()",
  "function test1Func20()",
  "function test1Func3()",
  "function test1Func4()",
  "function test1Func5()",
  "function test1Func6()",
  "function test1Func7()",
  "function test1Func8()",
  "function test1Func9()",
  "function test2Func1()",
  "function test2Func10()",
  "function test2Func11()",
  "function test2Func12()",
  "function test2Func13()",
  "function test2Func14()",
  "function test2Func15()",
  "function test2Func16()",
  "function test2Func17()",
  "function test2Func18()",
  "function test2Func19()",
  "function test2Func2()",
  "function test2Func20()",
  "function test2Func3()",
  "function test2Func4()",
  "function test2Func5()",
  "function test2Func6()",
  "function test2Func7()",
  "function test2Func8()",
  "function test2Func9()",
  "function diamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata)",
  "function facetAddress(bytes4 _functionSelector) view returns (address facetAddress_)",
  "function facetAddresses() view returns (address[] facetAddresses_)",
  "function facetFunctionSelectors(address _facet) view returns (bytes4[] facetFunctionSelectors_)",
  "function facets() view returns (tuple(address facetAddress, bytes4[] functionSelectors)[] facets_)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function owner() view returns (address owner_)",
  "function transferOwnership(address _newOwner)",
  "error DuplicateSignature(bytes4 _selector)",
  "event DiamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "function ALPHA_X() view returns (uint256)",
  "function ALPHA_Y() view returns (uint256)",
  "function BASE_FIELD_SIZE() view returns (uint256)",
  "function BETA_X1() view returns (uint256)",
  "function BETA_X2() view returns (uint256)",
  "function BETA_Y1() view returns (uint256)",
  "function BETA_Y2() view returns (uint256)",
  "function DELTA_X1() view returns (uint256)",
  "function DELTA_X2() view returns (uint256)",
  "function DELTA_Y1() view returns (uint256)",
  "function DELTA_Y2() view returns (uint256)",
  "function GAMMA_X1() view returns (uint256)",
  "function GAMMA_X2() view returns (uint256)",
  "function GAMMA_Y1() view returns (uint256)",
  "function GAMMA_Y2() view returns (uint256)",
  "function IC0_X() view returns (uint256)",
  "function IC0_Y() view returns (uint256)",
  "function IC10_X() view returns (uint256)",
  "function IC10_Y() view returns (uint256)",
  "function IC11_X() view returns (uint256)",
  "function IC11_Y() view returns (uint256)",
  "function IC12_X() view returns (uint256)",
  "function IC12_Y() view returns (uint256)",
  "function IC13_X() view returns (uint256)",
  "function IC13_Y() view returns (uint256)",
  "function IC14_X() view returns (uint256)",
  "function IC14_Y() view returns (uint256)",
  "function IC15_X() view returns (uint256)",
  "function IC15_Y() view returns (uint256)",
  "function IC16_X() view returns (uint256)",
  "function IC16_Y() view returns (uint256)",
  "function IC17_X() view returns (uint256)",
  "function IC17_Y() view returns (uint256)",
  "function IC18_X() view returns (uint256)",
  "function IC18_Y() view returns (uint256)",
  "function IC19_X() view returns (uint256)",
  "function IC19_Y() view returns (uint256)",
  "function IC1_X() view returns (uint256)",
  "function IC1_Y() view returns (uint256)",
  "function IC20_X() view returns (uint256)",
  "function IC20_Y() view returns (uint256)",
  "function IC21_X() view returns (uint256)",
  "function IC21_Y() view returns (uint256)",
  "function IC22_X() view returns (uint256)",
  "function IC22_Y() view returns (uint256)",
  "function IC23_X() view returns (uint256)",
  "function IC23_Y() view returns (uint256)",
  "function IC24_X() view returns (uint256)",
  "function IC24_Y() view returns (uint256)",
  "function IC25_X() view returns (uint256)",
  "function IC25_Y() view returns (uint256)",
  "function IC26_X() view returns (uint256)",
  "function IC26_Y() view returns (uint256)",
  "function IC27_X() view returns (uint256)",
  "function IC27_Y() view returns (uint256)",
  "function IC28_X() view returns (uint256)",
  "function IC28_Y() view returns (uint256)",
  "function IC29_X() view returns (uint256)",
  "function IC29_Y() view returns (uint256)",
  "function IC2_X() view returns (uint256)",
  "function IC2_Y() view returns (uint256)",
  "function IC30_X() view returns (uint256)",
  "function IC30_Y() view returns (uint256)",
  "function IC31_X() view returns (uint256)",
  "function IC31_Y() view returns (uint256)",
  "function IC32_X() view returns (uint256)",
  "function IC32_Y() view returns (uint256)",
  "function IC3_X() view returns (uint256)",
  "function IC3_Y() view returns (uint256)",
  "function IC4_X() view returns (uint256)",
  "function IC4_Y() view returns (uint256)",
  "function IC5_X() view returns (uint256)",
  "function IC5_Y() view returns (uint256)",
  "function IC6_X() view returns (uint256)",
  "function IC6_Y() view returns (uint256)",
  "function IC7_X() view returns (uint256)",
  "function IC7_Y() view returns (uint256)",
  "function IC8_X() view returns (uint256)",
  "function IC8_Y() view returns (uint256)",
  "function IC9_X() view returns (uint256)",
  "function IC9_Y() view returns (uint256)",
  "function P_PUBLIC_SIGNALS_ACCUMULATOR_SIZE() view returns (uint16)",
  "function P_TOTAL_SIZE() view returns (uint16)",
  "function verifyProof(uint256[2] pointA_, uint256[2][2] pointB_, uint256[2] pointC_, uint256[32] publicSignals_) view returns (bool verified_)",
  "error AccessControlBadConfirmation()",
  "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function renounceRole(bytes32 role, address callerConfirmation)",
  "function revokeRole(bytes32 role, address account)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error AccessControlBadConfirmation()",
  "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function renounceRole(bytes32 role, address callerConfirmation)",
  "function revokeRole(bytes32 role, address account)",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function transferOwnership(address newOwner)",
  "error AccessControlBadConfirmation()",
  "error AccessControlEnforcedDefaultAdminDelay(uint48 schedule)",
  "error AccessControlEnforcedDefaultAdminRules()",
  "error AccessControlInvalidDefaultAdmin(address defaultAdmin)",
  "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "event DefaultAdminDelayChangeCanceled()",
  "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
  "event DefaultAdminTransferCanceled()",
  "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
  "function acceptDefaultAdminTransfer()",
  "function beginDefaultAdminTransfer(address newAdmin)",
  "function cancelDefaultAdminTransfer()",
  "function changeDefaultAdminDelay(uint48 newDelay)",
  "function defaultAdmin() view returns (address)",
  "function defaultAdminDelay() view returns (uint48)",
  "function defaultAdminDelayIncreaseWait() view returns (uint48)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function owner() view returns (address)",
  "function pendingDefaultAdmin() view returns (address newAdmin, uint48 schedule)",
  "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 schedule)",
  "function renounceRole(bytes32 role, address account)",
  "function revokeRole(bytes32 role, address account)",
  "function rollbackDefaultAdminDelay()",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error AccessControlBadConfirmation()",
  "error AccessControlEnforcedDefaultAdminDelay(uint48 schedule)",
  "error AccessControlEnforcedDefaultAdminRules()",
  "error AccessControlInvalidDefaultAdmin(address defaultAdmin)",
  "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
  "event DefaultAdminDelayChangeCanceled()",
  "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
  "event DefaultAdminTransferCanceled()",
  "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "function acceptDefaultAdminTransfer()",
  "function beginDefaultAdminTransfer(address newAdmin)",
  "function cancelDefaultAdminTransfer()",
  "function changeDefaultAdminDelay(uint48 newDelay)",
  "function defaultAdmin() view returns (address)",
  "function defaultAdminDelay() view returns (uint48)",
  "function defaultAdminDelayIncreaseWait() view returns (uint48)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function pendingDefaultAdmin() view returns (address newAdmin, uint48 acceptSchedule)",
  "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 effectSchedule)",
  "function renounceRole(bytes32 role, address callerConfirmation)",
  "function revokeRole(bytes32 role, address account)",
  "function rollbackDefaultAdminDelay()",
  "function owner() view returns (address)",
  "error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId)",
  "error ERC1155InvalidApprover(address approver)",
  "error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength)",
  "error ERC1155InvalidOperator(address operator)",
  "error ERC1155InvalidReceiver(address receiver)",
  "error ERC1155InvalidSender(address sender)",
  "error ERC1155MissingApprovalForAll(address operator, address owner)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner)",
  "error ERC721InsufficientApproval(address operator, uint256 tokenId)",
  "error ERC721InvalidApprover(address approver)",
  "error ERC721InvalidOperator(address operator)",
  "error ERC721InvalidOwner(address owner)",
  "error ERC721InvalidReceiver(address receiver)",
  "error ERC721InvalidSender(address sender)",
  "error ERC721NonexistentToken(uint256 tokenId)",
  "error ERC1167FailedCreateClone()",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function decimals() view returns (uint8)",
  "function name() view returns (string)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function decimals() view returns (uint8)",
  "function name() view returns (string)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "error StringsInsufficientHexLength(uint256 value, uint256 length)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error MathOverflowedMulDiv()",
  "error SafeCastOverflowedIntDowncast(uint8 bits, int256 value)",
  "error SafeCastOverflowedIntToUint(int256 value)",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "error SafeCastOverflowedUintToInt(uint256 value)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "event Initialized(uint64 version)",
  "error alreadyExists(bytes32 id, address source)",
  "event Indexed(address indexed container, bytes32 indexed codeHash)",
  "function get(bytes32 id) view returns (address)",
  "function register(address container)",
  "error alreadyExists(bytes32 id, address source)",
  "event Indexed(address indexed container, bytes32 indexed codeHash)",
  "function get(bytes32 id) view returns (address)",
  "function register(address container)",
  "error CodeNotFoundInIndex(bytes32 codeId)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() view returns (string)",
  "function get() view returns (address[] src, bytes32 name, uint256 version)",
  "function instantiate(bytes data) returns (address[] instances, bytes32 distributionName, uint256 distributionVersion)",
  "error DistributionExists(bytes32 id)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidInstance(address instance)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error RepositoryAlreadyExists(address repository)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "event DistributionAdded(bytes32 indexed id, address distribution, address indexed initializer)",
  "event DistributionRemoved(bytes32 indexed id)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newInstanceId, uint256 indexed version, address[] instances, bytes args)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "function addDistribution(address repository, address initializer, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) requirement)",
  "function addDistribution(bytes32 distributorId, address initializer)",
  "function addNamedDistribution(bytes32 name, bytes32 distributorId, address initializer)",
  "function afterCall(bytes config, bytes4, address maybeInstance, uint256, bytes, bytes)",
  "function beforeCall(bytes config, bytes4, address maybeInstance, uint256, bytes) view returns (bytes)",
  "function calculateDistributorId(bytes32 sourceId, address initializer) pure returns (bytes32)",
  "function calculateDistributorId(address repository, address initializer) pure returns (bytes32)",
  "function changeVersion(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirement)",
  "function distributionComponents(bytes32 distributorsId) view returns (address distributionLocation, address initializer)",
  "function distributionOf(uint256 instance) view returns (bytes32 distributorsId)",
  "function getDistributionId(address instance) view returns (bytes32)",
  "function getDistributionURI(bytes32 distributorsId) view returns (string)",
  "function getDistributions() view returns (bytes32[])",
  "function getInstanceId(address instance) view returns (uint256)",
  "function instanceVersions(uint256 instanceId) view returns (uint64 major, uint64 minor, uint128 patch)",
  "function instantiate(bytes32 distributorId, bytes args) returns (address[], bytes32 distributionName, uint256 distributionVersion)",
  "function numInstances() view returns (uint256)",
  "function removeDistribution(bytes32 distributorId)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function versionRequirements(bytes32 distributorsId) view returns (tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement)",
  "error DissalowDistOnWhitelistedDistributor(address distributor, bytes32 distributionId)",
  "error DistributionIsNotPermitted(address distributor, bytes32 distributionId)",
  "error InvalidDistributor(address distributor)",
  "error InvalidTarget(address target)",
  "error NotAnInstance(address instance)",
  "error alreadyAllowed(address distributor)",
  "event DistributionAllowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributionDisallowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributorWhitelistRevoked(address indexed distributor)",
  "event DistributorWhitelisted(address indexed distributor)",
  "event Installed(address indexed instance, bytes32 indexed distributionId, bytes32 indexed permissions, bytes args)",
  "event Uninstalled(address indexed instance)",
  "function afterCall(bytes layerConfig, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function allowDistribution(address distributor, bytes32 distributionId)",
  "function beforeCall(bytes layerConfig, bytes4 selector, address requestingInstance, uint256 value, bytes data) returns (bytes)",
  "function disallowDistribution(address distributor, bytes32 distributionId)",
  "function distributorOf(address instance) view returns (address)",
  "function getInstance(uint256 instanceId) view returns (address[] instaneContracts)",
  "function getInstancesNum() view returns (uint256)",
  "function getWhitelistedDistributors() view returns (address[])",
  "function install(address distributor, bytes32 distributionId, bytes args) payable returns (uint256 instanceId)",
  "function isDistributor(address distributor) view returns (bool)",
  "function isInstance(address instance) view returns (bool)",
  "function revokeWhitelistedDistributor(address distributor)",
  "function target() view returns (address)",
  "function uninstall(uint256 instanceId)",
  "function whitelistDistributor(address distributor)",
  "function whitelistedDistributions(address distributor) view returns (bytes32[])",
  "error DissalowDistOnWhitelistedDistributor(address distributor, bytes32 distributionId)",
  "error DistributionIsNotPermitted(address distributor, bytes32 distributionId)",
  "error InvalidDistributor(address distributor)",
  "error InvalidInitialization()",
  "error InvalidTarget(address target)",
  "error NotAnInstance(address instance)",
  "error NotInitializing()",
  "error alreadyAllowed(address distributor)",
  "event DistributionAllowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributionDisallowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributorWhitelistRevoked(address indexed distributor)",
  "event DistributorWhitelisted(address indexed distributor)",
  "event Initialized(uint64 version)",
  "event Installed(address indexed instance, bytes32 indexed distributionId, bytes32 indexed permissions, bytes args)",
  "event Uninstalled(address indexed instance)",
  "function afterCall(bytes layerConfig, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function allowDistribution(address distributor, bytes32 distributionId)",
  "function beforeCall(bytes layerConfig, bytes4 selector, address requestingInstance, uint256 value, bytes data) returns (bytes)",
  "function disallowDistribution(address distributor, bytes32 distributionId)",
  "function distributorOf(address instance) view returns (address)",
  "function getInstance(uint256 instanceId) view returns (address[] instaneContracts)",
  "function getInstancesNum() view returns (uint256)",
  "function getWhitelistedDistributors() view returns (address[])",
  "function initialize(address targetAddress)",
  "function install(address distributor, bytes32 distributionId, bytes args) payable returns (uint256 instanceId)",
  "function isDistributor(address distributor) view returns (bool)",
  "function isInstance(address instance) view returns (bool)",
  "function revokeWhitelistedDistributor(address distributor)",
  "function target() view returns (address)",
  "function uninstall(uint256 instanceId)",
  "function whitelistDistributor(address distributor)",
  "function whitelistedDistributions(address distributor) view returns (bytes32[])",
  "constructor(tuple(address layerAddess, bytes layerConfigData)[] layers, address implementation)",
  "error EmptyReleaseMetadata()",
  "error ReleaseZeroNotAllowed()",
  "error VersionDoesNotExist(uint256 version)",
  "error VersionExists(uint256 version)",
  "error VersionIncrementInvalid(uint256 version)",
  "event ReleaseMetadataUpdated(uint256 indexed version, bytes releaseMetadata)",
  "event VersionAdded(uint256 indexed version, bytes32 indexed source, bytes buildMetadata)",
  "function contractURI() view returns (string)",
  "function get(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) required) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getLatest() view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getMajorReleaseMetadata(uint64 major) view returns (bytes)",
  "function getMajorReleases() view returns (uint64)",
  "function getMinorReleaseMetadata(uint64 major, uint64 minor) view returns (bytes)",
  "function getMinorReleases(uint64 major) view returns (uint64)",
  "function getPatchReleaseMetadata(uint64 major, uint64 minor, uint64 patch) view returns (bytes)",
  "function getPatchReleases(uint64 major, uint64 minor) view returns (uint128)",
  "function newRelease(bytes32 sourceId, bytes metadata, tuple(uint64 major, uint64 minor, uint128 patch) version)",
  "function repositoryName() view returns (bytes32)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function updateReleaseMetadata(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes releaseMetadata)",
  "error DistributionExists(bytes32 id)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidInstance(address instance)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error RepositoryAlreadyExists(address repository)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "event DistributionAdded(bytes32 indexed id, address distribution, address indexed initializer)",
  "event DistributionRemoved(bytes32 indexed id)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newInstanceId, uint256 indexed version, address[] instances, bytes args)",
  "event InstantiationCostChanged(bytes32 indexed id, uint256 cost)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "function _beneficiary() view returns (address)",
  "function addDistribution(address repository, address initializer, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) requirement)",
  "function addDistribution(bytes32 distributorId, address initializer)",
  "function addNamedDistribution(bytes32 name, bytes32 distributorId, address initializer)",
  "function afterCall(bytes config, bytes4, address maybeInstance, uint256, bytes, bytes)",
  "function beforeCall(bytes config, bytes4, address maybeInstance, uint256, bytes) view returns (bytes)",
  "function calculateDistributorId(bytes32 sourceId, address initializer) pure returns (bytes32)",
  "function calculateDistributorId(address repository, address initializer) pure returns (bytes32)",
  "function changeVersion(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirement)",
  "function defaultInstantiationCost() view returns (uint256)",
  "function distributionComponents(bytes32 distributorsId) view returns (address distributionLocation, address initializer)",
  "function distributionOf(uint256 instance) view returns (bytes32 distributorsId)",
  "function getDistributionId(address instance) view returns (bytes32)",
  "function getDistributionURI(bytes32 distributorsId) view returns (string)",
  "function getDistributions() view returns (bytes32[])",
  "function getInstanceId(address instance) view returns (uint256)",
  "function instanceVersions(uint256 instanceId) view returns (uint64 major, uint64 minor, uint128 patch)",
  "function instantiate(bytes32 distributorId, bytes args) returns (address[], bytes32 distributionName, uint256 distributionVersion)",
  "function instantiationCosts(bytes32 id) view returns (uint256)",
  "function numInstances() view returns (uint256)",
  "function paymentToken() view returns (address)",
  "function removeDistribution(bytes32 distributorId)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function versionRequirements(bytes32 distributorsId) view returns (tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement)",
  "constructor(bytes32 codeHash, bytes32 _metadata, bytes32 name, uint256 version)",
  "error CodeNotFoundInIndex(bytes32 codeId)",
  "error ERC1167FailedCreateClone()",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() view returns (string)",
  "function distributionName() view returns (bytes32)",
  "function distributionVersion() view returns (uint256)",
  "function get() view returns (address[] src, bytes32 name, uint256 version)",
  "function instantiate(bytes) returns (address[] instances, bytes32, uint256)",
  "constructor(address _repository, bytes32 _metadata)",
  "error CodeNotFoundInIndex(bytes32 codeId)",
  "error ERC1167FailedCreateClone()",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() view returns (string)",
  "function get() view returns (address[] src, bytes32 name, uint256 version)",
  "function instantiate(bytes) returns (address[] instances, bytes32, uint256)",
  "function repository() view returns (address)",
  "constructor(address _owner)",
  "error DistributionExists(bytes32 id)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidInstance(address instance)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "error RepositoryAlreadyExists(address repository)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "event DistributionAdded(bytes32 indexed id, address distribution, address indexed initializer)",
  "event DistributionRemoved(bytes32 indexed id)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newInstanceId, uint256 indexed version, address[] instances, bytes args)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "function addDistribution(address repository, address initializer, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) requirement)",
  "function addDistribution(bytes32 id, address initializer)",
  "function addNamedDistribution(bytes32 name, bytes32 distributorId, address initializer)",
  "function afterCall(bytes config, bytes4, address maybeInstance, uint256, bytes, bytes)",
  "function beforeCall(bytes config, bytes4, address maybeInstance, uint256, bytes) view returns (bytes)",
  "function calculateDistributorId(bytes32 sourceId, address initializer) pure returns (bytes32)",
  "function calculateDistributorId(address repository, address initializer) pure returns (bytes32)",
  "function changeVersion(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirement)",
  "function distributionComponents(bytes32 distributorsId) view returns (address distributionLocation, address initializer)",
  "function distributionOf(uint256 instance) view returns (bytes32 distributorsId)",
  "function getDistributionId(address instance) view returns (bytes32)",
  "function getDistributionURI(bytes32 distributorsId) view returns (string)",
  "function getDistributions() view returns (bytes32[])",
  "function getInstanceId(address instance) view returns (uint256)",
  "function instanceVersions(uint256 instanceId) view returns (uint64 major, uint64 minor, uint128 patch)",
  "function instantiate(bytes32 id, bytes args) returns (address[], bytes32, uint256)",
  "function numInstances() view returns (uint256)",
  "function owner() view returns (address)",
  "function removeDistribution(bytes32 id)",
  "function renounceOwnership()",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function transferOwnership(address newOwner)",
  "function versionRequirements(bytes32 distributorsId) view returns (tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement)",
  "function contractURI() view returns (string)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() view returns (string)",
  "function get() view returns (address[] sources, bytes32 distributionName, uint256 distributionVersion)",
  "function instantiate(bytes data) returns (address[] instances, bytes32 distributionName, uint256 distributionVersion)",
  "error DistributionExists(bytes32 id)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidInstance(address instance)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error RepositoryAlreadyExists(address repository)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "event DistributionAdded(bytes32 indexed id, address distribution, address indexed initializer)",
  "event DistributionRemoved(bytes32 indexed id)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newInstanceId, uint256 indexed version, address[] instances, bytes args)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "function addDistribution(address repository, address initializer, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) requirement)",
  "function addDistribution(bytes32 distributorId, address initializer)",
  "function addNamedDistribution(bytes32 name, bytes32 distributorId, address initializer)",
  "function afterCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function beforeCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data) returns (bytes)",
  "function changeVersion(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirement)",
  "function getDistributionId(address instance) view returns (bytes32)",
  "function getDistributionURI(bytes32 distributorId) view returns (string)",
  "function getDistributions() view returns (bytes32[] distributorIds)",
  "function getInstanceId(address instance) view returns (uint256)",
  "function instantiate(bytes32 distributorId, bytes args) returns (address[], bytes32 distributionName, uint256 distributionVersion)",
  "function removeDistribution(bytes32 distributorId)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function afterCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function beforeCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data) returns (bytes)",
  "error initializationFailed(bytes32 id, string reason)",
  "event Initialized(address indexed container, bytes32 indexed codeHash)",
  "function initialize(bytes32 distributionId, address[] instances, bytes32 distributionName, uint256 distributionVersion, bytes args)",
  "error DissalowDistOnWhitelistedDistributor(address distributor, bytes32 distributionId)",
  "error DistributionIsNotPermitted(address distributor, bytes32 distributionId)",
  "error InvalidDistributor(address distributor)",
  "error InvalidTarget(address target)",
  "error NotAnInstance(address instance)",
  "error alreadyAllowed(address distributor)",
  "event DistributionAllowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributionDisallowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributorWhitelistRevoked(address indexed distributor)",
  "event DistributorWhitelisted(address indexed distributor)",
  "event Installed(address indexed instance, bytes32 indexed distributionId, bytes32 indexed permissions, bytes args)",
  "event Uninstalled(address indexed instance)",
  "function afterCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function allowDistribution(address distributor, bytes32 distributionId)",
  "function beforeCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data) returns (bytes)",
  "function disallowDistribution(address distributor, bytes32 distributionId)",
  "function distributorOf(address instance) view returns (address)",
  "function getInstance(uint256 instanceId) view returns (address[] instaneContracts)",
  "function getInstancesNum() view returns (uint256)",
  "function getWhitelistedDistributors() view returns (address[])",
  "function install(address distributor, bytes32 distributionId, bytes args) payable returns (uint256 instanceId)",
  "function isDistributor(address distributor) view returns (bool)",
  "function isInstance(address instance) view returns (bool)",
  "function revokeWhitelistedDistributor(address distributor)",
  "function target() view returns (address)",
  "function uninstall(uint256 instanceId)",
  "function whitelistDistributor(address distributor)",
  "function whitelistedDistributions(address distributor) view returns (bytes32[])",
  "error EmptyReleaseMetadata()",
  "error ReleaseZeroNotAllowed()",
  "error VersionDoesNotExist(uint256 version)",
  "error VersionExists(uint256 version)",
  "error VersionIncrementInvalid(uint256 version)",
  "event ReleaseMetadataUpdated(uint256 indexed version, bytes releaseMetadata)",
  "event VersionAdded(uint256 indexed version, bytes32 indexed source, bytes buildMetadata)",
  "function contractURI() view returns (string)",
  "function get(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) required) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getLatest() view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function newRelease(bytes32 sourceId, bytes metadata, tuple(uint64 major, uint64 minor, uint128 patch) version)",
  "function repositoryName() view returns (bytes32)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function updateReleaseMetadata(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes releaseMetadata)",
  "error versionMismatch(string message)",
  "constructor()",
  "error ERC165CheckFailed(address distributor, bytes4 interfaceId, string interfaceName)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error OnlyTargetAllowed(address sender, address target)",
  "error disallowedAddress(address sender, bytes4 selector)",
  "event Initialized(uint64 version)",
  "function afterCall(bytes, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function beforeCall(bytes, bytes4 selector, address sender, uint256 value, bytes data) returns (bytes)",
  "function initialize(tuple(bytes4 selector, address[] disallowedAddresses, bool distributionComponentsOnly)[] methodSettings, address target, address distributor)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error CodeNotFoundInIndex(bytes32 codeId)",
  "error ERC1167FailedCreateClone()",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() pure returns (string)",
  "function get() view returns (address[] src, bytes32 name, uint256 version)",
  "function instantiate(bytes) returns (address[], bytes32, uint256)",
  "event MockInit(string testData)",
  "function init(bytes data)",
  "constructor(string name, string symbol, uint256 initialSupply)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function decimals() view returns (uint8)",
  "function name() view returns (string)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "constructor(address targetAddress, address owner)",
  "error DissalowDistOnWhitelistedDistributor(address distributor, bytes32 distributionId)",
  "error DistributionIsNotPermitted(address distributor, bytes32 distributionId)",
  "error InvalidDistributor(address distributor)",
  "error InvalidTarget(address target)",
  "error NotAnInstance(address instance)",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "error alreadyAllowed(address distributor)",
  "event DistributionAllowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributionDisallowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributorWhitelistRevoked(address indexed distributor)",
  "event DistributorWhitelisted(address indexed distributor)",
  "event Installed(address indexed instance, bytes32 indexed distributionId, bytes32 indexed permissions, bytes args)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event Uninstalled(address indexed instance)",
  "function afterCall(bytes layerConfig, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function allowDistribution(address distributor, bytes32 distributionId)",
  "function beforeCall(bytes layerConfig, bytes4 selector, address requestingInstance, uint256 value, bytes data) returns (bytes)",
  "function disallowDistribution(address distributor, bytes32 distributionId)",
  "function distributorOf(address instance) view returns (address)",
  "function getInstance(uint256 instanceId) view returns (address[] instaneContracts)",
  "function getInstancesNum() view returns (uint256)",
  "function getWhitelistedDistributors() view returns (address[])",
  "function install(address distributor, bytes32 distributionId, bytes args) payable returns (uint256 instanceId)",
  "function isDistributor(address distributor) view returns (bool)",
  "function isInstance(address instance) view returns (bool)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function revokeWhitelistedDistributor(address distributor)",
  "function target() view returns (address)",
  "function transferOwnership(address newOwner)",
  "function uninstall(uint256 instanceId)",
  "function whitelistDistributor(address distributor)",
  "function whitelistedDistributions(address distributor) view returns (bytes32[])",
  "constructor(address defaultAdmin, address token, uint256 defaultCost)",
  "error AccessControlBadConfirmation()",
  "error AccessControlEnforcedDefaultAdminDelay(uint48 schedule)",
  "error AccessControlEnforcedDefaultAdminRules()",
  "error AccessControlInvalidDefaultAdmin(address defaultAdmin)",
  "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
  "error DistributionExists(bytes32 id)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidInstance(address instance)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error RepositoryAlreadyExists(address repository)",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "event DefaultAdminDelayChangeCanceled()",
  "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
  "event DefaultAdminTransferCanceled()",
  "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
  "event DistributionAdded(bytes32 indexed id, address distribution, address indexed initializer)",
  "event DistributionRemoved(bytes32 indexed id)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newInstanceId, uint256 indexed version, address[] instances, bytes args)",
  "event InstantiationCostChanged(bytes32 indexed id, uint256 cost)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
  "function _beneficiary() view returns (address)",
  "function acceptDefaultAdminTransfer()",
  "function addDistribution(address repository, address initializer, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) requirement)",
  "function addDistribution(bytes32 id, address initializer)",
  "function addNamedDistribution(bytes32 name, bytes32 distributorId, address initializer)",
  "function afterCall(bytes config, bytes4, address maybeInstance, uint256, bytes, bytes)",
  "function beforeCall(bytes config, bytes4, address maybeInstance, uint256, bytes) view returns (bytes)",
  "function beginDefaultAdminTransfer(address newAdmin)",
  "function calculateDistributorId(bytes32 sourceId, address initializer) pure returns (bytes32)",
  "function calculateDistributorId(address repository, address initializer) pure returns (bytes32)",
  "function cancelDefaultAdminTransfer()",
  "function changeDefaultAdminDelay(uint48 newDelay)",
  "function changeVersion(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirement)",
  "function defaultAdmin() view returns (address)",
  "function defaultAdminDelay() view returns (uint48)",
  "function defaultAdminDelayIncreaseWait() view returns (uint48)",
  "function defaultInstantiationCost() view returns (uint256)",
  "function distributionComponents(bytes32 distributorsId) view returns (address distributionLocation, address initializer)",
  "function distributionOf(uint256 instance) view returns (bytes32 distributorsId)",
  "function getDistributionId(address instance) view returns (bytes32)",
  "function getDistributionURI(bytes32 distributorsId) view returns (string)",
  "function getDistributions() view returns (bytes32[])",
  "function getInstanceId(address instance) view returns (uint256)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function instanceVersions(uint256 instanceId) view returns (uint64 major, uint64 minor, uint128 patch)",
  "function instantiate(bytes32 id, bytes args) returns (address[] srcs, bytes32 name, uint256 version)",
  "function instantiationCosts(bytes32 id) view returns (uint256)",
  "function numInstances() view returns (uint256)",
  "function owner() view returns (address)",
  "function paymentToken() view returns (address)",
  "function pendingDefaultAdmin() view returns (address newAdmin, uint48 schedule)",
  "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 schedule)",
  "function removeDistribution(bytes32 id)",
  "function renounceRole(bytes32 role, address account)",
  "function revokeRole(bytes32 role, address account)",
  "function rollbackDefaultAdminDelay()",
  "function setInstantiationCost(bytes32 id, uint256 cost)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function versionRequirements(bytes32 distributorsId) view returns (tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement)",
  "event Bar()",
  "function foo()",
  "function ping() pure returns (string)",
  "constructor(address owner, bytes32 name, string cURI)",
  "error EmptyReleaseMetadata()",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "error ReleaseZeroNotAllowed()",
  "error VersionDoesNotExist(uint256 version)",
  "error VersionExists(uint256 version)",
  "error VersionIncrementInvalid(uint256 version)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event ReleaseMetadataUpdated(uint256 indexed version, bytes releaseMetadata)",
  "event VersionAdded(uint256 indexed version, bytes32 indexed source, bytes buildMetadata)",
  "function contractURI() view returns (string)",
  "function get(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) required) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getLatest() view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getMajorReleaseMetadata(uint64 major) view returns (bytes)",
  "function getMajorReleases() view returns (uint64)",
  "function getMinorReleaseMetadata(uint64 major, uint64 minor) view returns (bytes)",
  "function getMinorReleases(uint64 major) view returns (uint64)",
  "function getPatchReleaseMetadata(uint64 major, uint64 minor, uint64 patch) view returns (bytes)",
  "function getPatchReleases(uint64 major, uint64 minor) view returns (uint128)",
  "function newRelease(bytes32 sourceId, bytes metadata, tuple(uint64 major, uint64 minor, uint128 patch) version)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function repositoryName() view returns (bytes32)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function transferOwnership(address newOwner)",
  "function updateReleaseMetadata(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes releaseMetadata)"
]