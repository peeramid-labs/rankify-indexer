name: envio-indexer
networks:
  - id: 37113
    rpc_config:
      url: http://localhost:8300
    start_block: 0
    contracts:
      - name: RankifyInstance
        handler: src/EventHandlers.ts
        events:
          - event: GameClosed(uint256 indexed gameId)
          - event: GameOver(uint256 indexed gameId, address[] players, uint256[] scores)
          - event: GameStarted(uint256 indexed gameId)
          - event: LastTurn(uint256 indexed gameId)
          - event: OverTime(uint256 indexed gameId)
          - event: OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
          - event: >-
              PlayerJoined(uint256 indexed gameId, address indexed participant, bytes32 gmCommitment, string
              voterPubKey)
          - event: PlayerLeft(uint256 indexed gameId, address indexed player)
          - event: >-
              ProposalScore(uint256 indexed gameId, uint256 indexed turn, string indexed proposalHash, string proposal,
              uint256 score)
          - event: >-
              ProposalSubmitted(uint256 indexed gameId, uint256 indexed turn, address indexed proposer, uint256
              commitment, string encryptedProposal, bytes gmSignature, bytes proposerSignature)
          - event: RankTokenExited(address indexed player, uint256 rankId, uint256 amount, uint256 _toMint)
          - event: RegistrationOpen(uint256 indexed gameId)
          - event: >-
              VoteSubmitted(uint256 indexed gameId, uint256 indexed turn, address indexed player, string sealedBallotId,
              bytes gmSignature, bytes voterSignature, bytes32 ballotHash)
          - event: gameCreated(uint256 gameId, address indexed gm, address indexed creator, uint256 indexed rank)
          - event: >-
              TurnEnded(uint256 indexed gameId, uint256 indexed turn, address[] players, uint256[] scores, string[]
              newProposals, uint256[] proposerIndices, uint256[][] votes)
      - name: RankifyToken
        address:
          - ${RANKTOKEN_ADDRESS}
        handler: src/EventHandlers.ts
        events:
          - event: Approval(address indexed owner, address indexed spender, uint256 value)
          - event: DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)
          - event: DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes)
          - event: EIP712DomainChanged()
          - event: OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
          - event: Transfer(address indexed from, address indexed to, uint256 value)
      - name: RankToken
        handler: src/EventHandlers.ts
        events:
          - event: ApprovalForAll(address indexed account, address indexed operator, bool approved)
          - event: Initialized(uint64 version)
          - event: RankingInstanceUpdated(address indexed newRankingInstance)
          - event: TokensLocked(address indexed account, uint256 indexed id, uint256 value)
          - event: TokensUnlocked(address indexed account, uint256 indexed id, uint256 value)
          - event: >-
              TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[]
              values)
          - event: >-
              TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256
              value)
          - event: URI(string value, uint256 indexed id)
        address:
          - '0xd16E6942e4379Ffe76De2f1Eb530248cf6050CA5'
      - name: DAODistributor
        address:
          - '0x5f7A065b83C4087b6858911a8f804290Cdc44BcE'
        handler: src/EventHandlers.ts
        events:
          - event: Debug(bytes32 distributorsId, bytes args)
          - event: DefaultAdminDelayChangeCanceled()
          - event: DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)
          - event: DefaultAdminTransferCanceled()
          - event: DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)
          - event: DistributionAdded(bytes32 indexed id, address distribution, address indexed initializer)
          - event: DistributionRemoved(bytes32 indexed id)
          - event: >-
              Instantiated(bytes32 indexed distributionId, uint256 indexed newInstanceId, uint256 indexed version,
              address[] instances, bytes args)
          - event: InstantiationCostChanged(bytes32 indexed id, uint256 cost)
          - event: RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
          - event: RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
          - event: RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
          - event: >-
              VersionChanged(bytes32 indexed distributionId, ((uint64,uint64,uint128),uint8) indexed newRequirement,
              ((uint64,uint64,uint128),uint8) newRequirementData)
      - name: IssuanceCurve
        address:
          - 9.051202146204237e+47
        handler: src/EventHandlers.ts
        events:
          - event: Buy(address indexed buyer, uint256 amount, uint256 cost)
