services:
  graphql-engine:
    image: hasura/graphql-engine:v2.43.0
    ports:
      - "${HASURA_EXTERNAL_PORT:-8080}:8080"
    user: 1001:1001
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: ${HASURA_GRAPHQL_DATABASE_URL}
      HASURA_GRAPHQL_ENABLE_CONSOLE: ${HASURA_GRAPHQL_ENABLE_CONSOLE:-true} # can make this default to false once we are further in our development.
      HASURA_GRAPHQL_ENABLED_LOG_TYPES:
        startup, http-log, webhook-log, websocket-log,
        query-log
      HASURA_GRAPHQL_NO_OF_RETRIES: 10
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET:-testing}
      HASURA_GRAPHQL_STRINGIFY_NUMERIC_TYPES: "true"
      PORT: 8080
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: public
      ENVIO_PG_SSL_MODE: true
    healthcheck:
      test: timeout 1s bash -c ':> /dev/tcp/127.0.0.1/8080' || exit 1
      interval: 5s
      timeout: 2s
      retries: 50
      start_period: 5s
    networks:
      - envio-indexer-network
  envio-indexer:
    container_name: envio-indexer
    build:
      context: .
      dockerfile: Dockerfile
      args:
        RPC_URL: ${RPC_URL}
    ports:
      - "8081:8081"
    depends_on:
      graphql-engine:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.8"
          memory: 800M
    restart: always
    environment:
      ENVIO_POSTGRES_PASSWORD: ${ENVIO_POSTGRES_PASSWORD:-testing}
      ENVIO_PG_HOST: ${ENVIO_PG_HOST}
      ENVIO_PG_PORT: 5432
      ENVIO_PG_USER: ${ENVIO_PG_USER:-postgres}
      ENVIO_PG_DATABASE: ${ENVIO_PG_DATABASE:-envio-dev}
      ENVIO_PG_PUBLIC_SCHEMA: ${ENVIO_PG_PUBLIC_SCHEMA:-envio}
      ENVIO_PG_SSL_MODE: true
      CONFIG_FILE: ${CONFIG_FILE:-config.yaml}
      LOG_LEVEL: ${LOG_LEVEL:-trace}
      LOG_STRATEGY: ${LOG_STRATEGY:-console-pretty}
      HASURA_GRAPHQL_ENDPOINT: http://graphql-engine:8080/v1/metadata
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET:-testing}
      HASURA_SERVICE_HOST: graphql-engine
      HASURA_SERVICE_PORT: 8080
      TUI_OFF: ${TUI_OFF:-true}
      RPC_URL: ${RPC_URL}
    healthcheck:
      test: timeout 1s bash -c ':> /dev/tcp/127.0.0.1/8080' || exit 1
      interval: 5s
      timeout: 2s
      retries: 50
      start_period: 5s
    networks:
      - envio-indexer-network
networks:
  envio-indexer-network:
